{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./node_modules/pikaday/node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./galaxy/scripts/components/RuleCollectionBuilder.vue?2a08","webpack:///./galaxy/scripts/mvc/upload/upload-utils.js","webpack:///./galaxy/scripts/components/RuleCollectionBuilder.vue?04e0","webpack:///./galaxy/scripts/components/Select2.js","webpack:///galaxy/scripts/components/RuleCollectionBuilder.vue","webpack:///./galaxy/scripts/components/RuleCollectionBuilder.vue?9e8f","webpack:///./galaxy/scripts/components/RuleCollectionBuilder.vue"],"names":["map","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","./en-il","./en-il.js","./mn","./mn.js","./tg","./tg.js","./ug-cn","./ug-cn.js","_node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_dist_cjs_js_ref_7_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_vue_loader_lib_index_js_vue_loader_options_RuleCollectionBuilder_vue_vue_type_style_index_1_lang_css___WEBPACK_IMPORTED_MODULE_0__","n","jquery__WEBPACK_IMPORTED_MODULE_0__","jquery__WEBPACK_IMPORTED_MODULE_0___default","onload_loadConfig__WEBPACK_IMPORTED_MODULE_1__","utils_utils__WEBPACK_IMPORTED_MODULE_2__","__webpack_exports__","AUTO_EXTENSION","text","description","DEFAULT_GENOME","DEFAULT_EXTENSION","getRemoteFiles","success","error","$","ajax","url","concat","getAppRoot","method","getUploadDatatypes","callback","datatypesDisableAuto","auto","Utils","get","datatypes","listExtensions","key","push","extension","description_url","composite_files","sort","a","b","a_text","toLowerCase","b_text","unshift","getUploadGenomes","defaultGenome","genomes","listGenomes","Select2","props","render","_h","this","$createElement","_self","_c","_t","staticRenderFns","mounted","vm","$el","select2","data","options","placeholder","allowClear","val","value","trigger","on","event","$emit","watch","empty","destroyed","off","vue_runtime_esm","use","es_default","RULES","rule_definitions","MAPPING_TARGETS","ColumnSelector","_vm","multiple","ordered","staticClass","_v","_s","label","_l","target","targetEl","index","attrs","colHeaders","click","$event","handleRemove","moveUp","_e","length","orderedEdit","input","handleAdd","remainingHeaders","col","domProps","l","directives","name","rawName","modifiers","hover","title","help","handleInput","localization_default","required","type","String","default","Array","Boolean","valueAsList","computed","remaining","indexOf","parseInt","methods","idx","_val","splice","swapVal","set","components","RegularExpressionInput","for","popoverContent","expression","html","popoverTitle","left","RuleDisplay","editTitle","edit","removeTitle","remove","rule","warn","ruleType","display","IdentifierDisplay","columnsLabel","typeDisplay","titleEdit","titleRemove","columns","columnDisplay","RuleTargetComponent","class","linkClassName","href","builder","addNewRule","replace","RuleComponent","displayRuleType","typeToClass","cancel","cancelLabel","okay","applyLabel","handleRuleSave","components_RuleCollectionBuildervue_type_script_lang_js_","mapping","rules","orientation","initialRules","slice","elementsType","initialElements","collectionTypeRanks","collection_type","split","state","ruleView","ruleSource","ruleSourceJson","ruleSourceError","errorMessage","jaggedData","waitingJobState","titleReset","titleNumericSort","titleInvertFilterRegex","titleInvertFilterEmpty","titleInvertFilterMatches","titleViewSource","titleSourceCancel","titleSourceReset","titleSourceApply","titleRulesMenu","titleFilterMenu","titleColumMenu","titleRemoveMapping","titleApplyColumnDefinitions","titleErrorOkay","namePlaceholder","activeRuleIndex","addColumnRegexTarget","addColumnBasenameTarget","addColumnRegexExpression","addColumnRegexReplacement","addColumnRegexGroupCount","addColumnRegexType","addColumnMetadataValue","addColumnGroupTagValueValue","addColumnGroupTagValueDefault","addColumnConcatenateTarget0","addColumnConcatenateTarget1","addColumnRownumStart","addColumnSubstrTarget","addColumnSubstrType","addColumnSubstrLength","addColumnValue","removeColumnTargets","addFilterRegexTarget","addFilterRegexExpression","addFilterRegexInvert","addFilterMatchesTarget","addFilterMatchesValue","addFilterMatchesInvert","addFilterEmptyTarget","addFilterEmptyInvert","addFilterCompareTarget","addFilterCompareValue","addFilterCompareType","addFilterCountN","addFilterCountInvert","addFilterCountWhich","addSortingTarget","addSortingNumeric","splitColumnsTargets0","splitColumnsTargets1","swapColumnsTarget0","swapColumnsTarget1","collectionName","extensions","genome","hideSourceItems","defaultHideSourceItems","addNameTag","importType","creationFn","Function","saveRulesFn","oncancel","oncreate","ftpUploadSite","exisistingDatasets","showFileTypeSelector","mappingAsDict","file_type","showGenomeSelector","dbkey","showCollectionNameInput","collection_name","showAddNameTag","titleFinish","titleCancel","finishButtonTitle","hasActiveMappingEdit","underscore_js_exposed_default","any","values","editing","activeRule","activeRuleColHeaders","colHeadersPerRule","horizontal","vertical","mappedTargets","targets","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","return","unmappedTargets","targetModes","modes","targetDefinition","targetImportType","requiresFtp","_this$hotData","hotData","colHeadersFor","colHeadersDisplay","formattedHeaders","colIndex","colHeader","escape","mappingDisplay","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","mappingDef","columnHeader","join","asDict","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","metadataOptions","collectionTypeRank","hasTagsMetadata","collectionType","identifierColumns","list_identifiers","paired_identifier","validInput","buildingCollection","valid","ftp_path","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","sources","el","collection","obj","populateElementsFromCollectionDescription","elements","forEach","applyRules","str","mappingTargets","resetRules","resetRulesAndState","init","save","_rule","viewSource","resetSource","asJson","upload_utils","JSON","stringify","attemptRulePreview","parse","updateFromSource","cancelSourceEdit","addIdentifier","identifier","initialColumns","editRule","removeRule","removeMapping","refreshAndWait","response","Galaxy","app","currHistoryPanel","refreshContents","waitOnJob","_this","jobId","jobs","handleJobShow","jobResponse","job_states_model","NON_TERMINAL_STATES","setTimeout","doJobCheck","ERROR_STATES","doFullJobCheck","model","refresh","axios_default","loadConfig_js_exposed","then","catch","renderFetchError","_this2","stderr","console","log","err_msg","swapOrientation","hotTable","$refs","table","$nextTick","fullWidth","jquery_custom_js_exposed_default","width","updateSettings","createCollection","_this3","creationElementsFromDatasets","ajax_queue","AjaxQueue","fail","historyId","elementsByCollectionName","creationElementsForFetch","destination","creationDatasetsForFetch","post","history_id","auto_decompress","buildRequestElements","createDatasetDescription","createSubcollectionDescription","subElementProp","numIdentifierColumns","elementsByName","dataByCollection","collectionNameMap","collectionNameTarget","dataIndex","row","identifiers","_dataIndex","rowData","collectionTypeAtDepth","elementsAtDepth","identifiersAtDepth","identifierColumnIndex","element","found","_arr","_i","_element","subcollection","childCollectionElements","_this4","_this$hotData2","source","res","_datasetFor","src","tags","_this5","datasets","parentIdentifiers_","parentIdentifiers","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","elementObject","object","element_identifier","collectionTypeLevelSepIndex","dataset","restCollectionType","elementObj","elementData","elementSources","highlightColumn","addClass","unhighlightColumn","removeClass","urlColumn","ftpPathColumn","ftpPath","dbkeyColumn","fileTypeColumn","fileType","nameColumn","info","infoColumn","tagColumns","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","tagColumn","tag","group_tags","groupTagColumns","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","groupTagColumn","_tag","name_tag","nameTagColumn","nameTag","created","_this6","columnCount","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","history_content_type","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","HotTable","vue_handsontable_ce_default","StateDiv","RuleModalHeader","RuleModalMiddle","RuleModalFooter","component","componentNormalizer","composing","flex-column-container","rules-container-vertical","rules-container-horizontal","rules-container-full","rule-type","display-rule-type","col-headers","update:target","checked","isArray","change","$$a","$$el","$$c","$$i","min","$$selectedVal","prototype","filter","call","selected","_value","_q","ordered-edit","value-as-list","$set","update:orderedEdit","update:ordered-edit","data-toggle","role","bottom","_b","nativeOn","mouseover","mouseout","staticStyle","ref","readOnly","stretchH","slot","$$v","tabindex","variant","disabled"],"mappings":"8EAAA,IAAAA,EAAA,CACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,QAAA,IACAC,WAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,QAAA,IACAC,WAAA,IACAC,OAAA,IACAC,UAAA,IACAC,QAAA,IACAC,WAAA,IACAC,QAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,WAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,KACAC,YAAA,KACAC,eAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,gBAAA,KACAC,OAAA,KACAC,UAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,MAIA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAF,GACA,OAAAG,EAAAF,GAEA,SAAAC,EAAAF,GACA,IAAAG,EAAAC,EAAApP,EAAAgP,GAAA,CACA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAEA,MADAK,EAAAE,KAAA,mBACAF,EAEA,OAAArP,EAAAgP,GAEAD,EAAAS,KAAA,WACA,OAAAC,OAAAD,KAAAxP,IAEA+O,EAAAW,QAAAR,EACAS,EAAAC,QAAAb,EACAA,EAAAE,GAAA,2BCnQA,IAAAjP,EAAA,CACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAiM,UAAA,KACAC,aAAA,KACAjM,UAAA,KACAC,aAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,gBAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,UAAA,KACAC,aAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACA+G,OAAA,KACAC,UAAA,KACA/G,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAA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","file":"ruleCollectionBuilder.chunk.js","sourcesContent":["var map = {\n\t\"./af\": 890,\n\t\"./af.js\": 890,\n\t\"./ar\": 891,\n\t\"./ar-dz\": 892,\n\t\"./ar-dz.js\": 892,\n\t\"./ar-kw\": 893,\n\t\"./ar-kw.js\": 893,\n\t\"./ar-ly\": 894,\n\t\"./ar-ly.js\": 894,\n\t\"./ar-ma\": 895,\n\t\"./ar-ma.js\": 895,\n\t\"./ar-sa\": 896,\n\t\"./ar-sa.js\": 896,\n\t\"./ar-tn\": 897,\n\t\"./ar-tn.js\": 897,\n\t\"./ar.js\": 891,\n\t\"./az\": 898,\n\t\"./az.js\": 898,\n\t\"./be\": 899,\n\t\"./be.js\": 899,\n\t\"./bg\": 900,\n\t\"./bg.js\": 900,\n\t\"./bm\": 901,\n\t\"./bm.js\": 901,\n\t\"./bn\": 902,\n\t\"./bn.js\": 902,\n\t\"./bo\": 903,\n\t\"./bo.js\": 903,\n\t\"./br\": 904,\n\t\"./br.js\": 904,\n\t\"./bs\": 905,\n\t\"./bs.js\": 905,\n\t\"./ca\": 906,\n\t\"./ca.js\": 906,\n\t\"./cs\": 907,\n\t\"./cs.js\": 907,\n\t\"./cv\": 908,\n\t\"./cv.js\": 908,\n\t\"./cy\": 909,\n\t\"./cy.js\": 909,\n\t\"./da\": 910,\n\t\"./da.js\": 910,\n\t\"./de\": 911,\n\t\"./de-at\": 912,\n\t\"./de-at.js\": 912,\n\t\"./de-ch\": 913,\n\t\"./de-ch.js\": 913,\n\t\"./de.js\": 911,\n\t\"./dv\": 914,\n\t\"./dv.js\": 914,\n\t\"./el\": 915,\n\t\"./el.js\": 915,\n\t\"./en-au\": 916,\n\t\"./en-au.js\": 916,\n\t\"./en-ca\": 917,\n\t\"./en-ca.js\": 917,\n\t\"./en-gb\": 918,\n\t\"./en-gb.js\": 918,\n\t\"./en-ie\": 919,\n\t\"./en-ie.js\": 919,\n\t\"./en-nz\": 920,\n\t\"./en-nz.js\": 920,\n\t\"./eo\": 921,\n\t\"./eo.js\": 921,\n\t\"./es\": 922,\n\t\"./es-do\": 923,\n\t\"./es-do.js\": 923,\n\t\"./es-us\": 924,\n\t\"./es-us.js\": 924,\n\t\"./es.js\": 922,\n\t\"./et\": 925,\n\t\"./et.js\": 925,\n\t\"./eu\": 926,\n\t\"./eu.js\": 926,\n\t\"./fa\": 927,\n\t\"./fa.js\": 927,\n\t\"./fi\": 928,\n\t\"./fi.js\": 928,\n\t\"./fo\": 929,\n\t\"./fo.js\": 929,\n\t\"./fr\": 930,\n\t\"./fr-ca\": 931,\n\t\"./fr-ca.js\": 931,\n\t\"./fr-ch\": 932,\n\t\"./fr-ch.js\": 932,\n\t\"./fr.js\": 930,\n\t\"./fy\": 933,\n\t\"./fy.js\": 933,\n\t\"./gd\": 934,\n\t\"./gd.js\": 934,\n\t\"./gl\": 935,\n\t\"./gl.js\": 935,\n\t\"./gom-latn\": 936,\n\t\"./gom-latn.js\": 936,\n\t\"./gu\": 937,\n\t\"./gu.js\": 937,\n\t\"./he\": 938,\n\t\"./he.js\": 938,\n\t\"./hi\": 939,\n\t\"./hi.js\": 939,\n\t\"./hr\": 940,\n\t\"./hr.js\": 940,\n\t\"./hu\": 941,\n\t\"./hu.js\": 941,\n\t\"./hy-am\": 942,\n\t\"./hy-am.js\": 942,\n\t\"./id\": 943,\n\t\"./id.js\": 943,\n\t\"./is\": 944,\n\t\"./is.js\": 944,\n\t\"./it\": 945,\n\t\"./it.js\": 945,\n\t\"./ja\": 946,\n\t\"./ja.js\": 946,\n\t\"./jv\": 947,\n\t\"./jv.js\": 947,\n\t\"./ka\": 948,\n\t\"./ka.js\": 948,\n\t\"./kk\": 949,\n\t\"./kk.js\": 949,\n\t\"./km\": 950,\n\t\"./km.js\": 950,\n\t\"./kn\": 951,\n\t\"./kn.js\": 951,\n\t\"./ko\": 952,\n\t\"./ko.js\": 952,\n\t\"./ky\": 953,\n\t\"./ky.js\": 953,\n\t\"./lb\": 954,\n\t\"./lb.js\": 954,\n\t\"./lo\": 955,\n\t\"./lo.js\": 955,\n\t\"./lt\": 956,\n\t\"./lt.js\": 956,\n\t\"./lv\": 957,\n\t\"./lv.js\": 957,\n\t\"./me\": 958,\n\t\"./me.js\": 958,\n\t\"./mi\": 959,\n\t\"./mi.js\": 959,\n\t\"./mk\": 960,\n\t\"./mk.js\": 960,\n\t\"./ml\": 961,\n\t\"./ml.js\": 961,\n\t\"./mr\": 962,\n\t\"./mr.js\": 962,\n\t\"./ms\": 963,\n\t\"./ms-my\": 964,\n\t\"./ms-my.js\": 964,\n\t\"./ms.js\": 963,\n\t\"./mt\": 965,\n\t\"./mt.js\": 965,\n\t\"./my\": 966,\n\t\"./my.js\": 966,\n\t\"./nb\": 967,\n\t\"./nb.js\": 967,\n\t\"./ne\": 968,\n\t\"./ne.js\": 968,\n\t\"./nl\": 969,\n\t\"./nl-be\": 970,\n\t\"./nl-be.js\": 970,\n\t\"./nl.js\": 969,\n\t\"./nn\": 971,\n\t\"./nn.js\": 971,\n\t\"./pa-in\": 972,\n\t\"./pa-in.js\": 972,\n\t\"./pl\": 973,\n\t\"./pl.js\": 973,\n\t\"./pt\": 974,\n\t\"./pt-br\": 975,\n\t\"./pt-br.js\": 975,\n\t\"./pt.js\": 974,\n\t\"./ro\": 976,\n\t\"./ro.js\": 976,\n\t\"./ru\": 977,\n\t\"./ru.js\": 977,\n\t\"./sd\": 978,\n\t\"./sd.js\": 978,\n\t\"./se\": 979,\n\t\"./se.js\": 979,\n\t\"./si\": 980,\n\t\"./si.js\": 980,\n\t\"./sk\": 981,\n\t\"./sk.js\": 981,\n\t\"./sl\": 982,\n\t\"./sl.js\": 982,\n\t\"./sq\": 983,\n\t\"./sq.js\": 983,\n\t\"./sr\": 984,\n\t\"./sr-cyrl\": 985,\n\t\"./sr-cyrl.js\": 985,\n\t\"./sr.js\": 984,\n\t\"./ss\": 986,\n\t\"./ss.js\": 986,\n\t\"./sv\": 987,\n\t\"./sv.js\": 987,\n\t\"./sw\": 988,\n\t\"./sw.js\": 988,\n\t\"./ta\": 989,\n\t\"./ta.js\": 989,\n\t\"./te\": 990,\n\t\"./te.js\": 990,\n\t\"./tet\": 991,\n\t\"./tet.js\": 991,\n\t\"./th\": 992,\n\t\"./th.js\": 992,\n\t\"./tl-ph\": 993,\n\t\"./tl-ph.js\": 993,\n\t\"./tlh\": 994,\n\t\"./tlh.js\": 994,\n\t\"./tr\": 995,\n\t\"./tr.js\": 995,\n\t\"./tzl\": 996,\n\t\"./tzl.js\": 996,\n\t\"./tzm\": 997,\n\t\"./tzm-latn\": 998,\n\t\"./tzm-latn.js\": 998,\n\t\"./tzm.js\": 997,\n\t\"./uk\": 999,\n\t\"./uk.js\": 999,\n\t\"./ur\": 1000,\n\t\"./ur.js\": 1000,\n\t\"./uz\": 1001,\n\t\"./uz-latn\": 1002,\n\t\"./uz-latn.js\": 1002,\n\t\"./uz.js\": 1001,\n\t\"./vi\": 1003,\n\t\"./vi.js\": 1003,\n\t\"./x-pseudo\": 1004,\n\t\"./x-pseudo.js\": 1004,\n\t\"./yo\": 1005,\n\t\"./yo.js\": 1005,\n\t\"./zh-cn\": 1006,\n\t\"./zh-cn.js\": 1006,\n\t\"./zh-hk\": 1007,\n\t\"./zh-hk.js\": 1007,\n\t\"./zh-tw\": 1008,\n\t\"./zh-tw.js\": 1008\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1133;","var map = {\n\t\"./af\": 1010,\n\t\"./af.js\": 1010,\n\t\"./ar\": 1011,\n\t\"./ar-dz\": 1012,\n\t\"./ar-dz.js\": 1012,\n\t\"./ar-kw\": 1013,\n\t\"./ar-kw.js\": 1013,\n\t\"./ar-ly\": 1014,\n\t\"./ar-ly.js\": 1014,\n\t\"./ar-ma\": 1015,\n\t\"./ar-ma.js\": 1015,\n\t\"./ar-sa\": 1016,\n\t\"./ar-sa.js\": 1016,\n\t\"./ar-tn\": 1017,\n\t\"./ar-tn.js\": 1017,\n\t\"./ar.js\": 1011,\n\t\"./az\": 1018,\n\t\"./az.js\": 1018,\n\t\"./be\": 1019,\n\t\"./be.js\": 1019,\n\t\"./bg\": 1020,\n\t\"./bg.js\": 1020,\n\t\"./bm\": 1021,\n\t\"./bm.js\": 1021,\n\t\"./bn\": 1022,\n\t\"./bn.js\": 1022,\n\t\"./bo\": 1023,\n\t\"./bo.js\": 1023,\n\t\"./br\": 1024,\n\t\"./br.js\": 1024,\n\t\"./bs\": 1025,\n\t\"./bs.js\": 1025,\n\t\"./ca\": 1026,\n\t\"./ca.js\": 1026,\n\t\"./cs\": 1027,\n\t\"./cs.js\": 1027,\n\t\"./cv\": 1028,\n\t\"./cv.js\": 1028,\n\t\"./cy\": 1029,\n\t\"./cy.js\": 1029,\n\t\"./da\": 1030,\n\t\"./da.js\": 1030,\n\t\"./de\": 1031,\n\t\"./de-at\": 1032,\n\t\"./de-at.js\": 1032,\n\t\"./de-ch\": 1033,\n\t\"./de-ch.js\": 1033,\n\t\"./de.js\": 1031,\n\t\"./dv\": 1034,\n\t\"./dv.js\": 1034,\n\t\"./el\": 1035,\n\t\"./el.js\": 1035,\n\t\"./en-au\": 1036,\n\t\"./en-au.js\": 1036,\n\t\"./en-ca\": 1037,\n\t\"./en-ca.js\": 1037,\n\t\"./en-gb\": 1038,\n\t\"./en-gb.js\": 1038,\n\t\"./en-ie\": 1039,\n\t\"./en-ie.js\": 1039,\n\t\"./en-il\": 1040,\n\t\"./en-il.js\": 1040,\n\t\"./en-nz\": 1041,\n\t\"./en-nz.js\": 1041,\n\t\"./eo\": 1042,\n\t\"./eo.js\": 1042,\n\t\"./es\": 1043,\n\t\"./es-do\": 1044,\n\t\"./es-do.js\": 1044,\n\t\"./es-us\": 1045,\n\t\"./es-us.js\": 1045,\n\t\"./es.js\": 1043,\n\t\"./et\": 1046,\n\t\"./et.js\": 1046,\n\t\"./eu\": 1047,\n\t\"./eu.js\": 1047,\n\t\"./fa\": 1048,\n\t\"./fa.js\": 1048,\n\t\"./fi\": 1049,\n\t\"./fi.js\": 1049,\n\t\"./fo\": 1050,\n\t\"./fo.js\": 1050,\n\t\"./fr\": 1051,\n\t\"./fr-ca\": 1052,\n\t\"./fr-ca.js\": 1052,\n\t\"./fr-ch\": 1053,\n\t\"./fr-ch.js\": 1053,\n\t\"./fr.js\": 1051,\n\t\"./fy\": 1054,\n\t\"./fy.js\": 1054,\n\t\"./gd\": 1055,\n\t\"./gd.js\": 1055,\n\t\"./gl\": 1056,\n\t\"./gl.js\": 1056,\n\t\"./gom-latn\": 1057,\n\t\"./gom-latn.js\": 1057,\n\t\"./gu\": 1058,\n\t\"./gu.js\": 1058,\n\t\"./he\": 1059,\n\t\"./he.js\": 1059,\n\t\"./hi\": 1060,\n\t\"./hi.js\": 1060,\n\t\"./hr\": 1061,\n\t\"./hr.js\": 1061,\n\t\"./hu\": 1062,\n\t\"./hu.js\": 1062,\n\t\"./hy-am\": 1063,\n\t\"./hy-am.js\": 1063,\n\t\"./id\": 1064,\n\t\"./id.js\": 1064,\n\t\"./is\": 1065,\n\t\"./is.js\": 1065,\n\t\"./it\": 1066,\n\t\"./it.js\": 1066,\n\t\"./ja\": 1067,\n\t\"./ja.js\": 1067,\n\t\"./jv\": 1068,\n\t\"./jv.js\": 1068,\n\t\"./ka\": 1069,\n\t\"./ka.js\": 1069,\n\t\"./kk\": 1070,\n\t\"./kk.js\": 1070,\n\t\"./km\": 1071,\n\t\"./km.js\": 1071,\n\t\"./kn\": 1072,\n\t\"./kn.js\": 1072,\n\t\"./ko\": 1073,\n\t\"./ko.js\": 1073,\n\t\"./ky\": 1074,\n\t\"./ky.js\": 1074,\n\t\"./lb\": 1075,\n\t\"./lb.js\": 1075,\n\t\"./lo\": 1076,\n\t\"./lo.js\": 1076,\n\t\"./lt\": 1077,\n\t\"./lt.js\": 1077,\n\t\"./lv\": 1078,\n\t\"./lv.js\": 1078,\n\t\"./me\": 1079,\n\t\"./me.js\": 1079,\n\t\"./mi\": 1080,\n\t\"./mi.js\": 1080,\n\t\"./mk\": 1081,\n\t\"./mk.js\": 1081,\n\t\"./ml\": 1082,\n\t\"./ml.js\": 1082,\n\t\"./mn\": 1083,\n\t\"./mn.js\": 1083,\n\t\"./mr\": 1084,\n\t\"./mr.js\": 1084,\n\t\"./ms\": 1085,\n\t\"./ms-my\": 1086,\n\t\"./ms-my.js\": 1086,\n\t\"./ms.js\": 1085,\n\t\"./mt\": 1087,\n\t\"./mt.js\": 1087,\n\t\"./my\": 1088,\n\t\"./my.js\": 1088,\n\t\"./nb\": 1089,\n\t\"./nb.js\": 1089,\n\t\"./ne\": 1090,\n\t\"./ne.js\": 1090,\n\t\"./nl\": 1091,\n\t\"./nl-be\": 1092,\n\t\"./nl-be.js\": 1092,\n\t\"./nl.js\": 1091,\n\t\"./nn\": 1093,\n\t\"./nn.js\": 1093,\n\t\"./pa-in\": 1094,\n\t\"./pa-in.js\": 1094,\n\t\"./pl\": 1095,\n\t\"./pl.js\": 1095,\n\t\"./pt\": 1096,\n\t\"./pt-br\": 1097,\n\t\"./pt-br.js\": 1097,\n\t\"./pt.js\": 1096,\n\t\"./ro\": 1098,\n\t\"./ro.js\": 1098,\n\t\"./ru\": 1099,\n\t\"./ru.js\": 1099,\n\t\"./sd\": 1100,\n\t\"./sd.js\": 1100,\n\t\"./se\": 1101,\n\t\"./se.js\": 1101,\n\t\"./si\": 1102,\n\t\"./si.js\": 1102,\n\t\"./sk\": 1103,\n\t\"./sk.js\": 1103,\n\t\"./sl\": 1104,\n\t\"./sl.js\": 1104,\n\t\"./sq\": 1105,\n\t\"./sq.js\": 1105,\n\t\"./sr\": 1106,\n\t\"./sr-cyrl\": 1107,\n\t\"./sr-cyrl.js\": 1107,\n\t\"./sr.js\": 1106,\n\t\"./ss\": 1108,\n\t\"./ss.js\": 1108,\n\t\"./sv\": 1109,\n\t\"./sv.js\": 1109,\n\t\"./sw\": 1110,\n\t\"./sw.js\": 1110,\n\t\"./ta\": 1111,\n\t\"./ta.js\": 1111,\n\t\"./te\": 1112,\n\t\"./te.js\": 1112,\n\t\"./tet\": 1113,\n\t\"./tet.js\": 1113,\n\t\"./tg\": 1114,\n\t\"./tg.js\": 1114,\n\t\"./th\": 1115,\n\t\"./th.js\": 1115,\n\t\"./tl-ph\": 1116,\n\t\"./tl-ph.js\": 1116,\n\t\"./tlh\": 1117,\n\t\"./tlh.js\": 1117,\n\t\"./tr\": 1118,\n\t\"./tr.js\": 1118,\n\t\"./tzl\": 1119,\n\t\"./tzl.js\": 1119,\n\t\"./tzm\": 1120,\n\t\"./tzm-latn\": 1121,\n\t\"./tzm-latn.js\": 1121,\n\t\"./tzm.js\": 1120,\n\t\"./ug-cn\": 1122,\n\t\"./ug-cn.js\": 1122,\n\t\"./uk\": 1123,\n\t\"./uk.js\": 1123,\n\t\"./ur\": 1124,\n\t\"./ur.js\": 1124,\n\t\"./uz\": 1125,\n\t\"./uz-latn\": 1126,\n\t\"./uz-latn.js\": 1126,\n\t\"./uz.js\": 1125,\n\t\"./vi\": 1127,\n\t\"./vi.js\": 1127,\n\t\"./x-pseudo\": 1128,\n\t\"./x-pseudo.js\": 1128,\n\t\"./yo\": 1129,\n\t\"./yo.js\": 1129,\n\t\"./zh-cn\": 1130,\n\t\"./zh-cn.js\": 1130,\n\t\"./zh-hk\": 1131,\n\t\"./zh-hk.js\": 1131,\n\t\"./zh-tw\": 1132,\n\t\"./zh-tw.js\": 1132\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1134;","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js??ref--7-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RuleCollectionBuilder.vue?vue&type=style&index=1&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js??ref--7-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RuleCollectionBuilder.vue?vue&type=style&index=1&lang=css&\"","import $ from \"jquery\";\nimport { getAppRoot } from \"onload/loadConfig\";\nimport Utils from \"utils/utils\";\n\nconst AUTO_EXTENSION = {\n    id: \"auto\",\n    text: \"Auto-detect\",\n    description:\n        \"This system will try to detect the file type automatically. If your file is not detected properly as one of the known formats, it most likely means that it has some format problems (e.g., different number of columns on different rows). You can still coerce the system to set your data to the format you think it should be.  You can also upload compressed files, which will automatically be decompressed.\"\n};\nconst DEFAULT_GENOME = \"?\";\nconst DEFAULT_EXTENSION = \"auto\";\n\nfunction getUploadDatatypes(callback, datatypesDisableAuto, auto) {\n    Utils.get({\n        url: `${getAppRoot()}api/datatypes?extension_only=False`,\n        success: function(datatypes) {\n            const listExtensions = [];\n            for (var key in datatypes) {\n                listExtensions.push({\n                    id: datatypes[key].extension,\n                    text: datatypes[key].extension,\n                    description: datatypes[key].description,\n                    description_url: datatypes[key].description_url,\n                    composite_files: datatypes[key].composite_files\n                });\n            }\n            listExtensions.sort((a, b) => {\n                var a_text = a.text && a.text.toLowerCase();\n                var b_text = b.text && b.text.toLowerCase();\n                return a_text > b_text ? 1 : a_text < b_text ? -1 : 0;\n            });\n            if (!datatypesDisableAuto) {\n                listExtensions.unshift(auto);\n            }\n            callback(listExtensions);\n        }\n    });\n}\n\nfunction getUploadGenomes(callback, defaultGenome) {\n    Utils.get({\n        url: `${getAppRoot()}api/genomes`,\n        success: function(genomes) {\n            const listGenomes = [];\n\n            for (var key in genomes) {\n                listGenomes.push({\n                    id: genomes[key][1],\n                    text: genomes[key][0]\n                });\n            }\n            listGenomes.sort((a, b) => {\n                if (a.id == defaultGenome) {\n                    return -1;\n                }\n                if (b.id == defaultGenome) {\n                    return 1;\n                }\n                return a.text > b.text ? 1 : a.text < b.text ? -1 : 0;\n            });\n            callback(listGenomes);\n        }\n    });\n}\n\nfunction getRemoteFiles(success, error) {\n    return $.ajax({\n        url: `${getAppRoot()}api/remote_files`,\n        method: \"GET\",\n        success: success,\n        error: error\n    });\n}\n\nexport default {\n    AUTO_EXTENSION,\n    DEFAULT_GENOME,\n    DEFAULT_EXTENSION,\n    getRemoteFiles,\n    getUploadDatatypes,\n    getUploadGenomes\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.state == 'build')?_c('state-div',[(_vm.ruleView == 'source')?_c('rule-modal-header',[_vm._v(\"\\n        Below is a raw JSON description of the rules to apply to the tabular data. This is an advanced setting.\\n    \")]):(_vm.elementsType == 'datasets' || _vm.elementsType == 'library_datasets')?_c('rule-modal-header',[_vm._v(\"\\n        Use this form to describe rules for building collection(s) from the specified datasets.\\n        \"),_c('b',[_vm._v(\"Be sure to specify at least one column as a list identifier\")]),_vm._v(\" - specify more to created nested list\\n        structures. Specify a column to serve as \\\"collection name\\\" to group datasets into multiple collections.\\n    \")]):(_vm.importType == 'datasets')?_c('rule-modal-header',[_vm._v(\"\\n        Use this form to describe rules for import datasets. At least one column should be defined to a source to\\n        fetch data from (URLs, FTP files, etc...).\\n    \")]):_c('rule-modal-header',[_vm._v(\"\\n        Use this form to describe rules for import datasets. At least one column should be defined to a source to\\n        fetch data from (URLs, FTP files, etc...).\\n        \"),_c('b',[_vm._v(\"Be sure to specify at least one column as a list identifier\")]),_vm._v(\" - specify more to created nested list\\n        structures. Specify a column to serve as \\\"collection name\\\" to group datasets into multiple collections.\\n    \")]),_vm._v(\" \"),(_vm.ruleView == 'source')?_c('rule-modal-middle',[(_vm.ruleSourceError)?_c('p',{staticClass:\"errormessagelarge\"},[_vm._v(_vm._s(_vm.ruleSourceError))]):_vm._e(),_vm._v(\" \"),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ruleSource),expression:\"ruleSource\"}],staticClass:\"rule-source\",domProps:{\"value\":(_vm.ruleSource)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.ruleSource=$event.target.value}}})]):_c('rule-modal-middle',[(_vm.ruleView == 'normal')?_c('div',{staticClass:\"rule-builder-body vertically-spaced\",class:{ 'flex-column-container': _vm.vertical }},[_c('div',{staticClass:\"rule-column\",class:_vm.orientation},[_c('div',{staticClass:\"rules-container\",class:{\n                        'rules-container-vertical': _vm.initialElements && _vm.vertical,\n                        'rules-container-horizontal': _vm.initialElements && _vm.horizontal,\n                        'rules-container-full': _vm.initialElements == null\n                    }},[_c('rule-component',{attrs:{\"rule-type\":\"sort\",\"display-rule-type\":_vm.displayRuleType,\"builder\":this}},[_c('column-selector',{attrs:{\"target\":_vm.addSortingTarget,\"col-headers\":_vm.activeRuleColHeaders},on:{\"update:target\":function($event){_vm.addSortingTarget=$event}}}),_vm._v(\" \"),_c('label',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover\",modifiers:{\"hover\":true}}],attrs:{\"title\":_vm.titleNumericSort}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.addSortingNumeric),expression:\"addSortingNumeric\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.addSortingNumeric)?_vm._i(_vm.addSortingNumeric,null)>-1:(_vm.addSortingNumeric)},on:{\"change\":function($event){var $$a=_vm.addSortingNumeric,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.addSortingNumeric=$$a.concat([$$v]))}else{$$i>-1&&(_vm.addSortingNumeric=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.addSortingNumeric=$$c}}}}),_vm._v(\" \"+_vm._s(_vm.l(\"Numeric sorting.\"))+\"\\n                        \")])],1),_vm._v(\" \"),_c('rule-component',{attrs:{\"rule-type\":\"add_column_basename\",\"display-rule-type\":_vm.displayRuleType,\"builder\":this}},[_c('column-selector',{attrs:{\"target\":_vm.addColumnBasenameTarget,\"col-headers\":_vm.activeRuleColHeaders},on:{\"update:target\":function($event){_vm.addColumnBasenameTarget=$event}}})],1),_vm._v(\" \"),_c('rule-component',{attrs:{\"rule-type\":\"add_column_rownum\",\"display-rule-type\":_vm.displayRuleType,\"builder\":this}},[_c('label',[_vm._v(\"\\n                            \"+_vm._s(_vm.l(\"Starting from\"))+\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.addColumnRownumStart),expression:\"addColumnRownumStart\"}],attrs:{\"type\":\"number\",\"min\":\"0\"},domProps:{\"value\":(_vm.addColumnRownumStart)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.addColumnRownumStart=$event.target.value}}})])]),_vm._v(\" \"),_c('rule-component',{attrs:{\"rule-type\":\"add_column_metadata\",\"display-rule-type\":_vm.displayRuleType,\"builder\":this}},[_c('label',[_vm._v(\"\\n                            \"+_vm._s(_vm.l(\"For\"))+\"\\n                            \"),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.addColumnMetadataValue),expression:\"addColumnMetadataValue\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.addColumnMetadataValue=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},_vm._l((_vm.metadataOptions),function(col,index){return _c('option',{domProps:{\"value\":index}},[_vm._v(_vm._s(col))])}),0)])]),_vm._v(\" \"),_c('rule-component',{attrs:{\"rule-type\":\"add_column_group_tag_value\",\"display-rule-type\":_vm.displayRuleType,\"builder\":this}},[_c('label',[_vm._v(\"\\n                            \"+_vm._s(_vm.l(\"Value\"))+\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.addColumnGroupTagValueValue),expression:\"addColumnGroupTagValueValue\"}],attrs:{\"type\":\"text\"},domProps:{\"value\":(_vm.addColumnGroupTagValueValue)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.addColumnGroupTagValueValue=$event.target.value}}})]),_vm._v(\" \"),_c('label',[_vm._v(\"\\n                            \"+_vm._s(_vm.l(\"Default\"))+\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.addColumnGroupTagValueDefault),expression:\"addColumnGroupTagValueDefault\"}],attrs:{\"type\":\"text\"},domProps:{\"value\":(_vm.addColumnGroupTagValueDefault)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.addColumnGroupTagValueDefault=$event.target.value}}})])]),_vm._v(\" \"),_c('rule-component',{attrs:{\"rule-type\":\"add_column_regex\",\"display-rule-type\":_vm.displayRuleType,\"builder\":this}},[_c('column-selector',{attrs:{\"target\":_vm.addColumnRegexTarget,\"col-headers\":_vm.activeRuleColHeaders},on:{\"update:target\":function($event){_vm.addColumnRegexTarget=$event}}}),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.addColumnRegexType),expression:\"addColumnRegexType\"}],attrs:{\"type\":\"radio\",\"value\":\"global\"},domProps:{\"checked\":_vm._q(_vm.addColumnRegexType,\"global\")},on:{\"change\":function($event){_vm.addColumnRegexType=\"global\"}}}),_vm._v(\"Create column\\n                            matching expression.\")]),_c('br'),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.addColumnRegexType),expression:\"addColumnRegexType\"}],attrs:{\"type\":\"radio\",\"value\":\"groups\"},domProps:{\"checked\":_vm._q(_vm.addColumnRegexType,\"groups\")},on:{\"change\":function($event){_vm.addColumnRegexType=\"groups\"}}}),_vm._v(\"Create columns\\n                            matching expression groups.\")]),_c('br'),_vm._v(\" \"),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.addColumnRegexType),expression:\"addColumnRegexType\"}],attrs:{\"type\":\"radio\",\"value\":\"replacement\"},domProps:{\"checked\":_vm._q(_vm.addColumnRegexType,\"replacement\")},on:{\"change\":function($event){_vm.addColumnRegexType=\"replacement\"}}}),_vm._v(\"Create column\\n                            from expression replacement.\")]),_c('br'),_vm._v(\" \"),_c('regular-expression-input',{attrs:{\"target\":_vm.addColumnRegexExpression},on:{\"update:target\":function($event){_vm.addColumnRegexExpression=$event}}}),_vm._v(\" \"),(_vm.addColumnRegexType == 'groups')?_c('label',[_vm._v(\"\\n                            \"+_vm._s(_vm.l(\"Number of Groups\"))+\"\\n                            \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.addColumnRegexGroupCount),expression:\"addColumnRegexGroupCount\"}],attrs:{\"type\":\"number\",\"min\":\"1\"},domProps:{\"value\":(_vm.addColumnRegexGroupCount)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.addColumnRegexGroupCount=$event.target.value}}})]):_vm._e(),_vm._v(\" \"),(_vm.addColumnRegexType == 'replacement')?_c('label',[_vm._v(\"\\n                            \"+_vm._s(_vm.l(\"Replacement Expression\"))+\"\\n                            \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.addColumnRegexReplacement),expression:\"addColumnRegexReplacement\"}],staticClass:\"rule-replacement\",attrs:{\"type\":\"text\"},domProps:{\"value\":(_vm.addColumnRegexReplacement)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.addColumnRegexReplacement=$event.target.value}}})]):_vm._e()],1),_vm._v(\" \"),_c('rule-component',{attrs:{\"rule-type\":\"add_column_concatenate\",\"display-rule-type\":_vm.displayRuleType,\"builder\":this}},[_c('column-selector',{attrs:{\"target\":_vm.addColumnConcatenateTarget0,\"col-headers\":_vm.activeRuleColHeaders},on:{\"update:target\":function($event){_vm.addColumnConcatenateTarget0=$event}}}),_vm._v(\" \"),_c('column-selector',{attrs:{\"target\":_vm.addColumnConcatenateTarget1,\"col-headers\":_vm.activeRuleColHeaders},on:{\"update:target\":function($event){_vm.addColumnConcatenateTarget1=$event}}})],1),_vm._v(\" \"),_c('rule-component',{attrs:{\"rule-type\":\"add_column_substr\",\"display-rule-type\":_vm.displayRuleType,\"builder\":this}},[_c('column-selector',{attrs:{\"target\":_vm.addColumnSubstrTarget,\"col-headers\":_vm.activeRuleColHeaders},on:{\"update:target\":function($event){_vm.addColumnSubstrTarget=$event}}}),_vm._v(\" \"),_c('label',[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.addColumnSubstrType),expression:\"addColumnSubstrType\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.addColumnSubstrType=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"keep_prefix\"}},[_vm._v(\"Keep only prefix specified.\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"drop_prefix\"}},[_vm._v(\"Strip off prefix specified.\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"keep_suffix\"}},[_vm._v(\"Keep only suffix specified.\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"drop_suffix\"}},[_vm._v(\"Strip off suffix specified.\")])])]),_vm._v(\" \"),_c('label',[_vm._v(\"\\n                            \"+_vm._s(_vm.l(\"Prefix or suffix length\"))+\"\\n                            \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.addColumnSubstrLength),expression:\"addColumnSubstrLength\"}],attrs:{\"type\":\"number\",\"min\":\"0\"},domProps:{\"value\":(_vm.addColumnSubstrLength)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.addColumnSubstrLength=$event.target.value}}})])],1),_vm._v(\" \"),_c('rule-component',{attrs:{\"rule-type\":\"add_column_value\",\"display-rule-type\":_vm.displayRuleType,\"builder\":this}},[_c('label',[_vm._v(\" \"+_vm._s(_vm.l(\"Value\"))+\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.addColumnValue),expression:\"addColumnValue\"}],attrs:{\"type\":\"text\"},domProps:{\"value\":(_vm.addColumnValue)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.addColumnValue=$event.target.value}}})])]),_vm._v(\" \"),_c('rule-component',{attrs:{\"rule-type\":\"remove_columns\",\"display-rule-type\":_vm.displayRuleType,\"builder\":this}},[_c('column-selector',{attrs:{\"target\":_vm.removeColumnTargets,\"col-headers\":_vm.activeRuleColHeaders,\"multiple\":true},on:{\"update:target\":function($event){_vm.removeColumnTargets=$event}}})],1),_vm._v(\" \"),_c('rule-component',{attrs:{\"rule-type\":\"split_columns\",\"display-rule-type\":_vm.displayRuleType,\"builder\":this}},[_c('column-selector',{attrs:{\"target\":_vm.splitColumnsTargets0,\"label\":\"Odd Row Column(s)\",\"col-headers\":_vm.activeRuleColHeaders,\"multiple\":true},on:{\"update:target\":function($event){_vm.splitColumnsTargets0=$event}}}),_vm._v(\" \"),_c('column-selector',{attrs:{\"target\":_vm.splitColumnsTargets1,\"label\":\"Even Row Column(s)\",\"col-headers\":_vm.activeRuleColHeaders,\"multiple\":true},on:{\"update:target\":function($event){_vm.splitColumnsTargets1=$event}}})],1),_vm._v(\" \"),_c('rule-component',{attrs:{\"rule-type\":\"swap_columns\",\"display-rule-type\":_vm.displayRuleType,\"builder\":this}},[_c('column-selector',{attrs:{\"target\":_vm.swapColumnsTarget0,\"label\":\"Swap Column\",\"col-headers\":_vm.activeRuleColHeaders},on:{\"update:target\":function($event){_vm.swapColumnsTarget0=$event}}}),_vm._v(\" \"),_c('column-selector',{attrs:{\"target\":_vm.swapColumnsTarget1,\"label\":\"With Column\",\"col-headers\":_vm.activeRuleColHeaders},on:{\"update:target\":function($event){_vm.swapColumnsTarget1=$event}}})],1),_vm._v(\" \"),_c('rule-component',{attrs:{\"rule-type\":\"add_filter_regex\",\"display-rule-type\":_vm.displayRuleType,\"builder\":this}},[_c('column-selector',{attrs:{\"target\":_vm.addFilterRegexTarget,\"col-headers\":_vm.activeRuleColHeaders},on:{\"update:target\":function($event){_vm.addFilterRegexTarget=$event}}}),_vm._v(\" \"),_c('regular-expression-input',{attrs:{\"target\":_vm.addFilterRegexExpression},on:{\"update:target\":function($event){_vm.addFilterRegexExpression=$event}}}),_vm._v(\" \"),_c('label',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover\",modifiers:{\"hover\":true}}],attrs:{\"title\":_vm.titleInvertFilterRegex}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.addFilterRegexInvert),expression:\"addFilterRegexInvert\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.addFilterRegexInvert)?_vm._i(_vm.addFilterRegexInvert,null)>-1:(_vm.addFilterRegexInvert)},on:{\"change\":function($event){var $$a=_vm.addFilterRegexInvert,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.addFilterRegexInvert=$$a.concat([$$v]))}else{$$i>-1&&(_vm.addFilterRegexInvert=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.addFilterRegexInvert=$$c}}}}),_vm._v(\" \"+_vm._s(_vm.l(\"Invert filter.\"))+\"\\n                        \")])],1),_vm._v(\" \"),_c('rule-component',{attrs:{\"rule-type\":\"add_filter_matches\",\"display-rule-type\":_vm.displayRuleType,\"builder\":this}},[_c('column-selector',{attrs:{\"target\":_vm.addFilterMatchesTarget,\"col-headers\":_vm.activeRuleColHeaders},on:{\"update:target\":function($event){_vm.addFilterMatchesTarget=$event}}}),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.addFilterMatchesValue),expression:\"addFilterMatchesValue\"}],attrs:{\"type\":\"text\"},domProps:{\"value\":(_vm.addFilterMatchesValue)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.addFilterMatchesValue=$event.target.value}}}),_vm._v(\" \"),_c('label',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover\",modifiers:{\"hover\":true}}],attrs:{\"title\":_vm.titleInvertFilterMatches}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.addFilterMatchesInvert),expression:\"addFilterMatchesInvert\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.addFilterMatchesInvert)?_vm._i(_vm.addFilterMatchesInvert,null)>-1:(_vm.addFilterMatchesInvert)},on:{\"change\":function($event){var $$a=_vm.addFilterMatchesInvert,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.addFilterMatchesInvert=$$a.concat([$$v]))}else{$$i>-1&&(_vm.addFilterMatchesInvert=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.addFilterMatchesInvert=$$c}}}}),_vm._v(\" \"+_vm._s(_vm.l(\"Invert filter.\"))+\"\\n                        \")])],1),_vm._v(\" \"),_c('rule-component',{attrs:{\"rule-type\":\"add_filter_compare\",\"display-rule-type\":_vm.displayRuleType,\"builder\":this}},[_c('column-selector',{attrs:{\"target\":_vm.addFilterCompareTarget,\"col-headers\":_vm.activeRuleColHeaders},on:{\"update:target\":function($event){_vm.addFilterCompareTarget=$event}}}),_vm._v(\" \"),_c('label',[_vm._v(\"\\n                            Filter out rows\\n                            \"),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.addFilterCompareType),expression:\"addFilterCompareType\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.addFilterCompareType=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"less_than\"}},[_vm._v(_vm._s(_vm.l(\"less than\"))+\" \")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"less_than_equal\"}},[_vm._v(_vm._s(_vm.l(\"less than or equal to\")))]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"greater_than\"}},[_vm._v(_vm._s(_vm.l(\"greater than\")))]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"greater_than_equal\"}},[_vm._v(_vm._s(_vm.l(\"greater than or equal to\")))])])]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.addFilterCompareValue),expression:\"addFilterCompareValue\"}],attrs:{\"type\":\"text\"},domProps:{\"value\":(_vm.addFilterCompareValue)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.addFilterCompareValue=$event.target.value}}})],1),_vm._v(\" \"),_c('rule-component',{attrs:{\"rule-type\":\"add_filter_count\",\"display-rule-type\":_vm.displayRuleType,\"builder\":this}},[_c('label',[_vm._v(\"\\n                            Filter which rows?\\n                            \"),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.addFilterCountWhich),expression:\"addFilterCountWhich\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.addFilterCountWhich=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"first\"}},[_vm._v(\"first\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"last\"}},[_vm._v(\"last\")])])]),_vm._v(\" \"),_c('label',[_vm._v(\" Filter how many rows? \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.addFilterCountN),expression:\"addFilterCountN\"}],attrs:{\"type\":\"number\"},domProps:{\"value\":(_vm.addFilterCountN)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.addFilterCountN=$event.target.value}}})]),_vm._v(\" \"),_c('label',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover\",modifiers:{\"hover\":true}}],attrs:{\"title\":_vm.titleInvertFilterMatches}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.addFilterCountInvert),expression:\"addFilterCountInvert\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.addFilterCountInvert)?_vm._i(_vm.addFilterCountInvert,null)>-1:(_vm.addFilterCountInvert)},on:{\"change\":function($event){var $$a=_vm.addFilterCountInvert,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.addFilterCountInvert=$$a.concat([$$v]))}else{$$i>-1&&(_vm.addFilterCountInvert=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.addFilterCountInvert=$$c}}}}),_vm._v(\" \"+_vm._s(_vm.l(\"Invert filter.\"))+\"\\n                        \")])]),_vm._v(\" \"),_c('rule-component',{attrs:{\"rule-type\":\"add_filter_empty\",\"display-rule-type\":_vm.displayRuleType,\"builder\":this}},[_c('column-selector',{attrs:{\"target\":_vm.addFilterEmptyTarget,\"col-headers\":_vm.activeRuleColHeaders},on:{\"update:target\":function($event){_vm.addFilterEmptyTarget=$event}}}),_vm._v(\" \"),_c('label',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover\",modifiers:{\"hover\":true}}],attrs:{\"title\":_vm.titleInvertFilterEmpty}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.addFilterEmptyInvert),expression:\"addFilterEmptyInvert\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.addFilterEmptyInvert)?_vm._i(_vm.addFilterEmptyInvert,null)>-1:(_vm.addFilterEmptyInvert)},on:{\"change\":function($event){var $$a=_vm.addFilterEmptyInvert,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.addFilterEmptyInvert=$$a.concat([$$v]))}else{$$i>-1&&(_vm.addFilterEmptyInvert=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.addFilterEmptyInvert=$$c}}}}),_vm._v(\" \"+_vm._s(_vm.l(\"Invert filter.\"))+\"\\n                        \")])],1),_vm._v(\" \"),(_vm.displayRuleType == 'mapping')?_c('div',[_vm._l((_vm.mapping),function(map,index){return _c('div',{key:map.type,staticClass:\"map\",attrs:{\"index\":index}},[_c('column-selector',{class:'rule-map-' + map.type.replace(/_/g, '-'),attrs:{\"label\":_vm.mappingTargets()[map.type].label,\"help\":_vm.mappingTargets()[map.type].help,\"target\":map.columns,\"ordered-edit\":map.editing,\"col-headers\":_vm.colHeaders,\"multiple\":_vm.mappingTargets()[map.type].multiple,\"ordered\":true,\"value-as-list\":true},on:{\"update:target\":function($event){return _vm.$set(map, \"columns\", $event)},\"update:orderedEdit\":function($event){return _vm.$set(map, \"editing\", $event)},\"update:ordered-edit\":function($event){return _vm.$set(map, \"editing\", $event)}}},[_c('span',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover\",modifiers:{\"hover\":true}}],staticClass:\"fa fa-times\",attrs:{\"title\":_vm.titleRemoveMapping},on:{\"click\":function($event){return _vm.removeMapping(index)}}})])],1)}),_vm._v(\" \"),_c('div',{staticClass:\"buttons rule-edit-buttons d-flex justify-content-end\"},[(_vm.unmappedTargets.length > 0)?_c('button',{staticClass:\"dropdown-toggle btn btn-primary mr-1\",attrs:{\"type\":\"button\",\"data-toggle\":\"dropdown\"}},[_c('span',{staticClass:\"fa fa-plus rule-add-mapping\"}),_vm._v(\" \"+_vm._s(\"Add Definition\")),_c('span',{staticClass:\"caret\"})]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"dropdown-menu\",attrs:{\"role\":\"menu\"}},_vm._l((_vm.unmappedTargets),function(target){return _c('a',{key:target,staticClass:\"dropdown-item\",class:'rule-add-mapping-' + target.replace(/_/g, '-'),attrs:{\"index\":target,\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.addIdentifier(target)}}},[_vm._v(\"\\n                                    \"+_vm._s(_vm.mappingTargets()[target].label)+\"\\n                                \")])}),0),_vm._v(\" \"),(!_vm.hasActiveMappingEdit)?_c('b-button',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover.bottom\",modifiers:{\"hover\":true,\"bottom\":true}}],staticClass:\"rule-mapping-ok\",attrs:{\"title\":_vm.titleApplyColumnDefinitions},on:{\"click\":function($event){_vm.displayRuleType = null}}},[_vm._v(_vm._s(_vm.l(\"Apply\")))]):_vm._e()],1)],2):_vm._e(),_vm._v(\" \"),(_vm.displayRuleType == null)?_c('div',{staticClass:\"rule-summary\"},[_c('span',{staticClass:\"title\"},[_vm._v(\"\\n                            \"+_vm._s(_vm.l(\"Rules\"))+\"\\n                            \"),_c('span',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover\",modifiers:{\"hover\":true}}],staticClass:\"fa fa-wrench rule-builder-view-source\",attrs:{\"title\":_vm.titleViewSource},on:{\"click\":_vm.viewSource}})]),_vm._v(\" \"),(_vm.jaggedData)?_c('div',{staticClass:\"rule-warning\"},[_vm._v(\"\\n                            Rows contain differing numbers of columns, there was likely a problem parsing your data.\\n                        \")]):_vm._e(),_vm._v(\" \"),_c('ol',{staticClass:\"rules\"},[_vm._l((_vm.rules),function(rule,index){return _c('rule-display',{key:index,attrs:{\"rule\":rule,\"index\":index,\"col-headers\":_vm.colHeadersPerRule[index]},on:{\"edit\":function($event){return _vm.editRule(rule, index)},\"remove\":function($event){return _vm.removeRule(index)}}})}),_vm._v(\" \"),_vm._l((_vm.mapping),function(map,index){return _c('identifier-display',_vm._b({key:map.type,attrs:{\"index\":index,\"col-headers\":_vm.colHeaders},on:{\"remove\":function($event){return _vm.removeMapping(index)},\"edit\":function($event){_vm.displayRuleType = 'mapping'}},nativeOn:{\"mouseover\":function($event){map.columns.forEach(function (col) { return _vm.highlightColumn(col); })},\"mouseout\":function($event){map.columns.forEach(function (col) { return _vm.unhighlightColumn(col); })}}},'identifier-display',map,false))}),_vm._v(\" \"),(_vm.mapping.length == 0)?_c('div',[_vm._v(\"\\n                                One or more column definitions must be specified. These are required to specify how\\n                                to build collections and datasets from rows and columns of the table.\\n                                \"),_c('a',{attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){_vm.displayRuleType = 'mapping'}}},[_vm._v(\"Click here\")]),_vm._v(\" to\\n                                manage column definitions.\\n                            \")]):_vm._e()],2),_vm._v(\" \"),_c('div',{staticClass:\"rules-buttons\"},[_c('div',{staticClass:\"btn-group dropup\"},[_c('button',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover.bottom\",modifiers:{\"hover\":true,\"bottom\":true}}],staticClass:\"rule-menu-rules-button primary-button dropdown-toggle\",attrs:{\"type\":\"button\",\"title\":_vm.titleRulesMenu,\"data-toggle\":\"dropdown\"}},[_c('span',{staticClass:\"fa fa-plus\"}),_vm._v(\" \"+_vm._s(_vm.l(\"Rules\"))),_c('span',{staticClass:\"caret\"})]),_vm._v(\" \"),_c('div',{staticClass:\"dropdown-menu\",attrs:{\"role\":\"menu\"}},[_c('rule-target-component',{attrs:{\"builder\":this,\"rule-type\":\"sort\"}}),_vm._v(\" \"),_c('rule-target-component',{attrs:{\"builder\":this,\"rule-type\":\"remove_columns\"}}),_vm._v(\" \"),_c('rule-target-component',{attrs:{\"builder\":this,\"rule-type\":\"split_columns\"}}),_vm._v(\" \"),_c('rule-target-component',{attrs:{\"builder\":this,\"rule-type\":\"swap_columns\"}}),_vm._v(\" \"),_c('a',{staticClass:\"dropdown-item rule-link rule-link-mapping\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){_vm.displayRuleType = 'mapping'}}},[_vm._v(\"Add / Modify Column Definitions\")])],1)]),_vm._v(\" \"),_c('div',{staticClass:\"btn-group dropup\"},[_c('button',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover.bottom\",modifiers:{\"hover\":true,\"bottom\":true}}],staticClass:\"rule-menu-filter-button primary-button dropdown-toggle\",attrs:{\"type\":\"button\",\"title\":_vm.titleFilterMenu,\"data-toggle\":\"dropdown\"}},[_c('span',{staticClass:\"fa fa-plus\"}),_vm._v(\" \"+_vm._s(_vm.l(\"Filter\"))),_c('span',{staticClass:\"caret\"})]),_vm._v(\" \"),_c('div',{staticClass:\"dropdown-menu\",attrs:{\"role\":\"menu\"}},[_c('rule-target-component',{attrs:{\"builder\":this,\"rule-type\":\"add_filter_regex\"}}),_vm._v(\" \"),_c('rule-target-component',{attrs:{\"builder\":this,\"rule-type\":\"add_filter_matches\"}}),_vm._v(\" \"),_c('rule-target-component',{attrs:{\"builder\":this,\"rule-type\":\"add_filter_compare\"}}),_vm._v(\" \"),_c('rule-target-component',{attrs:{\"builder\":this,\"rule-type\":\"add_filter_empty\"}}),_vm._v(\" \"),_c('rule-target-component',{attrs:{\"builder\":this,\"rule-type\":\"add_filter_count\"}})],1)]),_vm._v(\" \"),_c('div',{staticClass:\"btn-group dropup\"},[_c('button',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover.bottom\",modifiers:{\"hover\":true,\"bottom\":true}}],staticClass:\"rule-menu-column-button primary-button dropdown-toggle\",attrs:{\"type\":\"button\",\"title\":_vm.titleColumMenu,\"data-toggle\":\"dropdown\"}},[_c('span',{staticClass:\"fa fa-plus\"}),_vm._v(\" \"+_vm._s(_vm.l(\"Column\"))),_c('span',{staticClass:\"caret\"})]),_vm._v(\" \"),_c('div',{staticClass:\"dropdown-menu\",attrs:{\"role\":\"menu\"}},[_c('rule-target-component',{attrs:{\"builder\":this,\"rule-type\":\"add_column_basename\"}}),_vm._v(\" \"),(_vm.metadataOptions)?_c('rule-target-component',{attrs:{\"builder\":this,\"rule-type\":\"add_column_metadata\"}}):_vm._e(),_vm._v(\" \"),(_vm.hasTagsMetadata)?_c('rule-target-component',{attrs:{\"builder\":this,\"rule-type\":\"add_column_group_tag_value\"}}):_vm._e(),_vm._v(\" \"),_c('rule-target-component',{attrs:{\"builder\":this,\"rule-type\":\"add_column_regex\"}}),_vm._v(\" \"),_c('rule-target-component',{attrs:{\"builder\":this,\"rule-type\":\"add_column_concatenate\"}}),_vm._v(\" \"),_c('rule-target-component',{attrs:{\"builder\":this,\"rule-type\":\"add_column_rownum\"}}),_vm._v(\" \"),_c('rule-target-component',{attrs:{\"builder\":this,\"rule-type\":\"add_column_value\"}}),_vm._v(\" \"),_c('rule-target-component',{attrs:{\"builder\":this,\"rule-type\":\"add_column_substr\"}})],1)])])]):_vm._e()],1)]),_vm._v(\" \"),(_vm.initialElements !== null)?_c('div',{staticClass:\"table-column\",class:_vm.orientation,staticStyle:{\"width\":\"100%\"}},[_c('hot-table',{ref:\"hotTable\",attrs:{\"id\":\"hot-table\",\"data\":_vm.hotData.data,\"colHeaders\":_vm.colHeadersDisplay,\"readOnly\":true,\"stretchH\":\"all\"}})],1):_vm._e()]):_vm._e()]),_vm._v(\" \"),(_vm.ruleView == 'source')?_c('rule-modal-footer',[_c('b-button',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover\",modifiers:{\"hover\":true}}],staticClass:\"rule-btn-cancel\",attrs:{\"title\":_vm.titleSourceCancel},on:{\"click\":_vm.cancelSourceEdit}},[_vm._v(\"\\n            \"+_vm._s(_vm.l(\"Cancel\"))+\"\\n        \")]),_vm._v(\" \"),_c('b-button',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover\",modifiers:{\"hover\":true}}],staticClass:\"creator-reset-btn rule-btn-reset\",attrs:{\"title\":_vm.titleSourceReset}},[_vm._v(\"\\n            \"+_vm._s(_vm.l(\"Reset\"))+\"\\n        \")]),_vm._v(\" \"),_c('b-button',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover\",modifiers:{\"hover\":true}}],staticClass:\"rule-btn-okay\",attrs:{\"title\":_vm.titleSourceApply},on:{\"click\":_vm.attemptRulePreview}},[_vm._v(\"\\n            \"+_vm._s(_vm.l(\"Apply\"))+\"\\n        \")])],1):(_vm.ruleView == 'normal')?_c('rule-modal-footer',[_c('div',{staticClass:\"rule-footer-inputs\",attrs:{\"slot\":\"inputs\"},slot:\"inputs\"},[(_vm.elementsType == 'datasets')?_c('label',[_vm._v(\" \"+_vm._s(_vm.l(\"Hide original elements\"))+\": \")]):_vm._e(),_vm._v(\" \"),(_vm.elementsType == 'datasets')?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.hideSourceItems),expression:\"hideSourceItems\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.hideSourceItems)?_vm._i(_vm.hideSourceItems,null)>-1:(_vm.hideSourceItems)},on:{\"change\":function($event){var $$a=_vm.hideSourceItems,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.hideSourceItems=$$a.concat([$$v]))}else{$$i>-1&&(_vm.hideSourceItems=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.hideSourceItems=$$c}}}}):_vm._e(),_vm._v(\" \"),(_vm.extension && _vm.showFileTypeSelector)?_c('div',{staticClass:\"rule-footer-extension-group\"},[_c('label',[_vm._v(\" \"+_vm._s(_vm.l(\"Type\"))+\": \")]),_vm._v(\" \"),_c('select2',{staticClass:\"extension-select\",attrs:{\"name\":\"extension\"},model:{value:(_vm.extension),callback:function ($$v) {_vm.extension=$$v},expression:\"extension\"}},_vm._l((_vm.extensions),function(col){return _c('option',{key:col.id,domProps:{\"value\":col['id']}},[_vm._v(_vm._s(col[\"text\"]))])}),0)],1):_vm._e(),_vm._v(\" \"),(_vm.genome && _vm.showGenomeSelector)?_c('div',{staticClass:\"rule-footer-genome-group\"},[_c('label',[_vm._v(\" \"+_vm._s(_vm.l(\"Genome\"))+\": \")]),_vm._v(\" \"),_c('select2',{staticClass:\"genome-select\",model:{value:(_vm.genome),callback:function ($$v) {_vm.genome=$$v},expression:\"genome\"}},_vm._l((_vm.genomes),function(col){return _c('option',{key:col.id,domProps:{\"value\":col['id']}},[_vm._v(_vm._s(col[\"text\"]))])}),0)],1):_vm._e(),_vm._v(\" \"),(_vm.showAddNameTag)?_c('label',[_vm._v(\" \"+_vm._s(_vm.l(\"Add nametag for name\"))+\": \")]):_vm._e(),_vm._v(\" \"),(_vm.showAddNameTag)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.addNameTag),expression:\"addNameTag\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.addNameTag)?_vm._i(_vm.addNameTag,null)>-1:(_vm.addNameTag)},on:{\"change\":function($event){var $$a=_vm.addNameTag,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.addNameTag=$$a.concat([$$v]))}else{$$i>-1&&(_vm.addNameTag=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.addNameTag=$$c}}}}):_vm._e(),_vm._v(\" \"),(_vm.showCollectionNameInput)?_c('div',{staticClass:\"rule-footer-name-group\"},[_c('b-input',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover\",modifiers:{\"hover\":true}}],staticClass:\"collection-name\",attrs:{\"placeholder\":_vm.namePlaceholder,\"title\":_vm.namePlaceholder},model:{value:(_vm.collectionName),callback:function ($$v) {_vm.collectionName=$$v},expression:\"collectionName\"}}),_vm._v(\" \"),_c('label',[_vm._v(\" \"+_vm._s(_vm.l(\"Name\"))+\": \")])],1):_vm._e()]),_vm._v(\" \"),_c('b-button',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover\",modifiers:{\"hover\":true}}],staticClass:\"creator-cancel-btn rule-btn-cancel\",attrs:{\"help\":_vm.titleCancel,\"tabindex\":\"-1\"},on:{\"click\":_vm.cancel}},[_vm._v(\"\\n            \"+_vm._s(_vm.l(\"Cancel\"))+\"\\n        \")]),_vm._v(\" \"),_c('b-button',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover\",modifiers:{\"hover\":true}}],staticClass:\"creator-reset-btn rule-btn-reset\",attrs:{\"title\":_vm.titleReset},on:{\"click\":_vm.resetRulesAndState}},[_vm._v(\"\\n            \"+_vm._s(_vm.l(\"Reset\"))+\"\\n        \")]),_vm._v(\" \"),_c('b-button',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover\",modifiers:{\"hover\":true}}],staticClass:\"create-collection rule-btn-okay\",attrs:{\"title\":_vm.titleFinish,\"variant\":\"primary\",\"disabled\":!_vm.validInput},on:{\"click\":_vm.createCollection}},[_vm._v(\"\\n            \"+_vm._s(_vm.finishButtonTitle)+\"\\n        \")])],1):_vm._e()],1):(_vm.state == 'wait')?_c('state-div',[(_vm.importType == 'datasets')?_c('rule-modal-header',[_vm._v(\"\\n        \"+_vm._s(_vm.l(\n                \"Datasets submitted to Galaxy for creation, this dialog will close when dataset creation is complete. You may close this dialog at any time, but you will not be informed of errors with dataset creation and you may have to refresh your history manually to view new datasets once complete.\"\n            ))+\"\\n    \")]):(_vm.importType == 'collections')?_c('rule-modal-header',[_vm._v(\"\\n        \"+_vm._s(_vm.l(\n                \"Galaxy is waiting for collection creation, this dialog will close when this is complete. You may close this dialog at any time, but you will not be informed of errors with collection creation and you may have to refresh your history manually to view new collections once complete.\"\n            ))+\"\\n    \")]):_vm._e(),_vm._v(\" \"),_c('rule-modal-footer',[_c('b-button',{staticClass:\"creator-cancel-btn\",attrs:{\"tabindex\":\"-1\"},on:{\"click\":_vm.cancel}},[_vm._v(\" \"+_vm._s(_vm.l(\"Close\"))+\" \")])],1)],1):(_vm.state == 'error')?_c('state-div',[_c('rule-modal-header',[_vm._v(\" A problem was encountered. \")]),_vm._v(\" \"),_c('rule-modal-middle',[_c('p',{staticClass:\"errormessagelarge\"},[_vm._v(_vm._s(_vm.errorMessage))])]),_vm._v(\" \"),_c('rule-modal-footer',[_c('b-button',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover\",modifiers:{\"hover\":true}}],staticClass:\"creator-cancel-btn\",attrs:{\"title\":_vm.titleCancel,\"tabindex\":\"-1\"},on:{\"click\":_vm.cancel}},[_vm._v(\"\\n            \"+_vm._s(_vm.l(\"Close\"))+\"\\n        \")]),_vm._v(\" \"),_c('b-button',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover\",modifiers:{\"hover\":true}}],attrs:{\"title\":_vm.titleErrorOkay,\"tabindex\":\"-1\"},on:{\"click\":function($event){_vm.state = 'build'}}},[_vm._v(\"\\n            \"+_vm._s(_vm.l(\"Okay\"))+\"\\n        \")])],1)],1):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","// Based on https://vuejs.org/v2/examples/select2.html but adapted to handle list values\n// with \"multiple: true\" set.\nimport $ from \"jquery\";\n\nexport default {\n    props: [\"options\", \"value\", \"placeholder\"],\n    template: `<select><slot></slot></select>`,\n    mounted: function() {\n        var vm = this;\n        $(this.$el)\n            // init select2\n            .select2({ data: this.options, placeholder: this.placeholder, allowClear: this.placeholder })\n            .val(this.value)\n            .trigger(\"change\")\n            // emit event on change.\n            .on(\"change\", function(event) {\n                vm.$emit(\"input\", event.val);\n            });\n    },\n    watch: {\n        value: function(value) {\n            // update value\n            $(this.$el).val(value);\n        },\n        options: function(options) {\n            // update options\n            $(this.$el)\n                .empty()\n                .select2({ data: options });\n        }\n    },\n    destroyed: function() {\n        $(this.$el)\n            .off()\n            .select2(\"destroy\");\n    }\n};\n","<template>\n    <state-div v-if=\"state == 'build'\">\n        <!-- Different instructions if building up from individual datasets vs.\n             initial data import. -->\n        <rule-modal-header v-if=\"ruleView == 'source'\">\n            Below is a raw JSON description of the rules to apply to the tabular data. This is an advanced setting.\n        </rule-modal-header>\n        <rule-modal-header v-else-if=\"elementsType == 'datasets' || elementsType == 'library_datasets'\">\n            Use this form to describe rules for building collection(s) from the specified datasets.\n            <b>Be sure to specify at least one column as a list identifier</b> - specify more to created nested list\n            structures. Specify a column to serve as \"collection name\" to group datasets into multiple collections.\n        </rule-modal-header>\n        <!-- This modality allows importing individual datasets, multiple collections,\n             and requires a data source - note that. -->\n        <rule-modal-header v-else-if=\"importType == 'datasets'\">\n            Use this form to describe rules for import datasets. At least one column should be defined to a source to\n            fetch data from (URLs, FTP files, etc...).\n        </rule-modal-header>\n        <rule-modal-header v-else>\n            Use this form to describe rules for import datasets. At least one column should be defined to a source to\n            fetch data from (URLs, FTP files, etc...).\n            <b>Be sure to specify at least one column as a list identifier</b> - specify more to created nested list\n            structures. Specify a column to serve as \"collection name\" to group datasets into multiple collections.\n        </rule-modal-header>\n        <rule-modal-middle v-if=\"ruleView == 'source'\">\n            <p class=\"errormessagelarge\" v-if=\"ruleSourceError\">{{ ruleSourceError }}</p>\n            <textarea class=\"rule-source\" v-model=\"ruleSource\"></textarea>\n        </rule-modal-middle>\n        <rule-modal-middle v-else>\n            <!-- column-headers -->\n            <div\n                class=\"rule-builder-body vertically-spaced\"\n                v-bind:class=\"{ 'flex-column-container': vertical }\"\n                v-if=\"ruleView == 'normal'\"\n            >\n                <!-- width: 30%; -->\n                <div class=\"rule-column\" v-bind:class=\"orientation\">\n                    <div\n                        class=\"rules-container\"\n                        v-bind:class=\"{\n                            'rules-container-vertical': initialElements && vertical,\n                            'rules-container-horizontal': initialElements && horizontal,\n                            'rules-container-full': initialElements == null\n                        }\"\n                    >\n                        <rule-component rule-type=\"sort\" :display-rule-type=\"displayRuleType\" :builder=\"this\">\n                            <column-selector :target.sync=\"addSortingTarget\" :col-headers=\"activeRuleColHeaders\" />\n                            <label v-b-tooltip.hover :title=\"titleNumericSort\">\n                                <input type=\"checkbox\" v-model=\"addSortingNumeric\" /> {{ l(\"Numeric sorting.\") }}\n                            </label>\n                        </rule-component>\n                        <rule-component\n                            rule-type=\"add_column_basename\"\n                            :display-rule-type=\"displayRuleType\"\n                            :builder=\"this\"\n                        >\n                            <column-selector\n                                :target.sync=\"addColumnBasenameTarget\"\n                                :col-headers=\"activeRuleColHeaders\"\n                            />\n                        </rule-component>\n                        <rule-component\n                            rule-type=\"add_column_rownum\"\n                            :display-rule-type=\"displayRuleType\"\n                            :builder=\"this\"\n                        >\n                            <label>\n                                {{ l(\"Starting from\") }} <input type=\"number\" v-model=\"addColumnRownumStart\" min=\"0\" />\n                            </label>\n                        </rule-component>\n                        <rule-component\n                            rule-type=\"add_column_metadata\"\n                            :display-rule-type=\"displayRuleType\"\n                            :builder=\"this\"\n                        >\n                            <label>\n                                {{ l(\"For\") }}\n                                <select v-model=\"addColumnMetadataValue\">\n                                    <!-- eslint-disable-next-line vue/require-v-for-key -->\n                                    <option v-for=\"(col, index) in metadataOptions\" :value=\"index\">{{ col }}</option>\n                                </select>\n                            </label>\n                        </rule-component>\n                        <rule-component\n                            rule-type=\"add_column_group_tag_value\"\n                            :display-rule-type=\"displayRuleType\"\n                            :builder=\"this\"\n                        >\n                            <label>\n                                {{ l(\"Value\") }} <input type=\"text\" v-model=\"addColumnGroupTagValueValue\" />\n                            </label>\n                            <label>\n                                {{ l(\"Default\") }} <input type=\"text\" v-model=\"addColumnGroupTagValueDefault\" />\n                            </label>\n                        </rule-component>\n                        <rule-component\n                            rule-type=\"add_column_regex\"\n                            :display-rule-type=\"displayRuleType\"\n                            :builder=\"this\"\n                        >\n                            <column-selector :target.sync=\"addColumnRegexTarget\" :col-headers=\"activeRuleColHeaders\" />\n                            <label\n                                ><input type=\"radio\" v-model=\"addColumnRegexType\" value=\"global\" />Create column\n                                matching expression.</label\n                            ><br />\n                            <label\n                                ><input type=\"radio\" v-model=\"addColumnRegexType\" value=\"groups\" />Create columns\n                                matching expression groups.</label\n                            ><br />\n                            <label\n                                ><input type=\"radio\" v-model=\"addColumnRegexType\" value=\"replacement\" />Create column\n                                from expression replacement.</label\n                            ><br />\n                            <regular-expression-input :target.sync=\"addColumnRegexExpression\" />\n                            <label v-if=\"addColumnRegexType == 'groups'\">\n                                {{ l(\"Number of Groups\") }}\n                                <input type=\"number\" v-model=\"addColumnRegexGroupCount\" min=\"1\" />\n                            </label>\n                            <label v-if=\"addColumnRegexType == 'replacement'\">\n                                {{ l(\"Replacement Expression\") }}\n                                <input type=\"text\" v-model=\"addColumnRegexReplacement\" class=\"rule-replacement\" />\n                            </label>\n                        </rule-component>\n                        <rule-component\n                            rule-type=\"add_column_concatenate\"\n                            :display-rule-type=\"displayRuleType\"\n                            :builder=\"this\"\n                        >\n                            <column-selector\n                                :target.sync=\"addColumnConcatenateTarget0\"\n                                :col-headers=\"activeRuleColHeaders\"\n                            />\n                            <column-selector\n                                :target.sync=\"addColumnConcatenateTarget1\"\n                                :col-headers=\"activeRuleColHeaders\"\n                            />\n                        </rule-component>\n                        <rule-component\n                            rule-type=\"add_column_substr\"\n                            :display-rule-type=\"displayRuleType\"\n                            :builder=\"this\"\n                        >\n                            <column-selector :target.sync=\"addColumnSubstrTarget\" :col-headers=\"activeRuleColHeaders\" />\n                            <label>\n                                <select v-model=\"addColumnSubstrType\">\n                                    <option value=\"keep_prefix\">Keep only prefix specified.</option>\n                                    <option value=\"drop_prefix\">Strip off prefix specified.</option>\n                                    <option value=\"keep_suffix\">Keep only suffix specified.</option>\n                                    <option value=\"drop_suffix\">Strip off suffix specified.</option>\n                                </select>\n                            </label>\n                            <label>\n                                {{ l(\"Prefix or suffix length\") }}\n                                <input type=\"number\" v-model=\"addColumnSubstrLength\" min=\"0\" />\n                            </label>\n                        </rule-component>\n                        <rule-component\n                            rule-type=\"add_column_value\"\n                            :display-rule-type=\"displayRuleType\"\n                            :builder=\"this\"\n                        >\n                            <label> {{ l(\"Value\") }} <input type=\"text\" v-model=\"addColumnValue\" /> </label>\n                        </rule-component>\n                        <rule-component rule-type=\"remove_columns\" :display-rule-type=\"displayRuleType\" :builder=\"this\">\n                            <column-selector\n                                :target.sync=\"removeColumnTargets\"\n                                :col-headers=\"activeRuleColHeaders\"\n                                :multiple=\"true\"\n                            />\n                        </rule-component>\n                        <rule-component rule-type=\"split_columns\" :display-rule-type=\"displayRuleType\" :builder=\"this\">\n                            <column-selector\n                                :target.sync=\"splitColumnsTargets0\"\n                                label=\"Odd Row Column(s)\"\n                                :col-headers=\"activeRuleColHeaders\"\n                                :multiple=\"true\"\n                            />\n                            <column-selector\n                                :target.sync=\"splitColumnsTargets1\"\n                                label=\"Even Row Column(s)\"\n                                :col-headers=\"activeRuleColHeaders\"\n                                :multiple=\"true\"\n                            />\n                        </rule-component>\n                        <rule-component rule-type=\"swap_columns\" :display-rule-type=\"displayRuleType\" :builder=\"this\">\n                            <column-selector\n                                :target.sync=\"swapColumnsTarget0\"\n                                label=\"Swap Column\"\n                                :col-headers=\"activeRuleColHeaders\"\n                            />\n                            <column-selector\n                                :target.sync=\"swapColumnsTarget1\"\n                                label=\"With Column\"\n                                :col-headers=\"activeRuleColHeaders\"\n                            />\n                        </rule-component>\n                        <rule-component\n                            rule-type=\"add_filter_regex\"\n                            :display-rule-type=\"displayRuleType\"\n                            :builder=\"this\"\n                        >\n                            <column-selector :target.sync=\"addFilterRegexTarget\" :col-headers=\"activeRuleColHeaders\" />\n                            <regular-expression-input :target.sync=\"addFilterRegexExpression\" />\n                            <label v-b-tooltip.hover :title=\"titleInvertFilterRegex\">\n                                <input type=\"checkbox\" v-model=\"addFilterRegexInvert\" /> {{ l(\"Invert filter.\") }}\n                            </label>\n                        </rule-component>\n                        <rule-component\n                            rule-type=\"add_filter_matches\"\n                            :display-rule-type=\"displayRuleType\"\n                            :builder=\"this\"\n                        >\n                            <column-selector\n                                :target.sync=\"addFilterMatchesTarget\"\n                                :col-headers=\"activeRuleColHeaders\"\n                            />\n                            <input type=\"text\" v-model=\"addFilterMatchesValue\" />\n                            <label v-b-tooltip.hover :title=\"titleInvertFilterMatches\">\n                                <input type=\"checkbox\" v-model=\"addFilterMatchesInvert\" /> {{ l(\"Invert filter.\") }}\n                            </label>\n                        </rule-component>\n                        <rule-component\n                            rule-type=\"add_filter_compare\"\n                            :display-rule-type=\"displayRuleType\"\n                            :builder=\"this\"\n                        >\n                            <column-selector\n                                :target.sync=\"addFilterCompareTarget\"\n                                :col-headers=\"activeRuleColHeaders\"\n                            />\n                            <label>\n                                Filter out rows\n                                <select v-model=\"addFilterCompareType\">\n                                    <option value=\"less_than\">{{ l(\"less than\") }} </option>\n                                    <option value=\"less_than_equal\">{{ l(\"less than or equal to\") }}</option>\n                                    <option value=\"greater_than\">{{ l(\"greater than\") }}</option>\n                                    <option value=\"greater_than_equal\">{{ l(\"greater than or equal to\") }}</option>\n                                </select>\n                            </label>\n                            <input type=\"text\" v-model=\"addFilterCompareValue\" />\n                        </rule-component>\n                        <rule-component\n                            rule-type=\"add_filter_count\"\n                            :display-rule-type=\"displayRuleType\"\n                            :builder=\"this\"\n                        >\n                            <label>\n                                Filter which rows?\n                                <select v-model=\"addFilterCountWhich\">\n                                    <option value=\"first\">first</option>\n                                    <option value=\"last\">last</option>\n                                </select>\n                            </label>\n                            <label> Filter how many rows? <input type=\"number\" v-model=\"addFilterCountN\" /> </label>\n                            <label v-b-tooltip.hover :title=\"titleInvertFilterMatches\">\n                                <input type=\"checkbox\" v-model=\"addFilterCountInvert\" /> {{ l(\"Invert filter.\") }}\n                            </label>\n                        </rule-component>\n                        <rule-component\n                            rule-type=\"add_filter_empty\"\n                            :display-rule-type=\"displayRuleType\"\n                            :builder=\"this\"\n                        >\n                            <column-selector :target.sync=\"addFilterEmptyTarget\" :col-headers=\"activeRuleColHeaders\" />\n                            <label v-b-tooltip.hover :title=\"titleInvertFilterEmpty\">\n                                <input type=\"checkbox\" v-model=\"addFilterEmptyInvert\" /> {{ l(\"Invert filter.\") }}\n                            </label>\n                        </rule-component>\n                        <div v-if=\"displayRuleType == 'mapping'\">\n                            <div class=\"map\" v-for=\"(map, index) in mapping\" v-bind:index=\"index\" v-bind:key=\"map.type\">\n                                <column-selector\n                                    :class=\"'rule-map-' + map.type.replace(/_/g, '-')\"\n                                    :label=\"mappingTargets()[map.type].label\"\n                                    :help=\"mappingTargets()[map.type].help\"\n                                    :target.sync=\"map.columns\"\n                                    :ordered-edit.sync=\"map.editing\"\n                                    :col-headers=\"colHeaders\"\n                                    :multiple=\"mappingTargets()[map.type].multiple\"\n                                    :ordered=\"true\"\n                                    :value-as-list=\"true\"\n                                >\n                                    <span\n                                        v-b-tooltip.hover\n                                        :title=\"titleRemoveMapping\"\n                                        class=\"fa fa-times\"\n                                        @click=\"removeMapping(index)\"\n                                    ></span>\n                                </column-selector>\n                            </div>\n                            <div class=\"buttons rule-edit-buttons d-flex justify-content-end\">\n                                <button\n                                    type=\"button\"\n                                    class=\"dropdown-toggle btn btn-primary mr-1\"\n                                    data-toggle=\"dropdown\"\n                                    v-if=\"unmappedTargets.length > 0\"\n                                >\n                                    <span class=\"fa fa-plus rule-add-mapping\"></span> {{ \"Add Definition\"\n                                    }}<span class=\"caret\"></span>\n                                </button>\n                                <div class=\"dropdown-menu\" role=\"menu\">\n                                    <a\n                                        v-for=\"target in unmappedTargets\"\n                                        v-bind:index=\"target\"\n                                        v-bind:key=\"target\"\n                                        class=\"dropdown-item\"\n                                        href=\"javascript:void(0)\"\n                                        :class=\"'rule-add-mapping-' + target.replace(/_/g, '-')\"\n                                        @click=\"addIdentifier(target)\"\n                                    >\n                                        {{ mappingTargets()[target].label }}\n                                    </a>\n                                </div>\n                                <b-button\n                                    v-b-tooltip.hover.bottom\n                                    :title=\"titleApplyColumnDefinitions\"\n                                    class=\"rule-mapping-ok\"\n                                    v-if=\"!hasActiveMappingEdit\"\n                                    @click=\"displayRuleType = null\"\n                                    >{{ l(\"Apply\") }}</b-button\n                                >\n                            </div>\n                        </div>\n                        <div class=\"rule-summary\" v-if=\"displayRuleType == null\">\n                            <span class=\"title\">\n                                {{ l(\"Rules\") }}\n                                <span\n                                    v-b-tooltip.hover\n                                    class=\"fa fa-wrench rule-builder-view-source\"\n                                    :title=\"titleViewSource\"\n                                    @click=\"viewSource\"\n                                ></span>\n                            </span>\n                            <div v-if=\"jaggedData\" class=\"rule-warning\">\n                                Rows contain differing numbers of columns, there was likely a problem parsing your data.\n                            </div>\n                            <ol class=\"rules\">\n                                <!-- Example at the end of https://vuejs.org/v2/guide/list.html -->\n                                <rule-display\n                                    v-for=\"(rule, index) in rules\"\n                                    v-bind:rule=\"rule\"\n                                    v-bind:index=\"index\"\n                                    v-bind:key=\"index\"\n                                    @edit=\"editRule(rule, index)\"\n                                    @remove=\"removeRule(index)\"\n                                    :col-headers=\"colHeadersPerRule[index]\"\n                                />\n                                <identifier-display\n                                    v-for=\"(map, index) in mapping\"\n                                    v-bind=\"map\"\n                                    v-bind:index=\"index\"\n                                    v-bind:key=\"map.type\"\n                                    @remove=\"removeMapping(index)\"\n                                    @edit=\"displayRuleType = 'mapping'\"\n                                    v-on:mouseover.native=\"map.columns.forEach(col => highlightColumn(col))\"\n                                    v-on:mouseout.native=\"map.columns.forEach(col => unhighlightColumn(col))\"\n                                    :col-headers=\"colHeaders\"\n                                />\n                                <div v-if=\"mapping.length == 0\">\n                                    One or more column definitions must be specified. These are required to specify how\n                                    to build collections and datasets from rows and columns of the table.\n                                    <a href=\"javascript:void(0)\" @click=\"displayRuleType = 'mapping'\">Click here</a> to\n                                    manage column definitions.\n                                </div>\n                            </ol>\n                            <div class=\"rules-buttons\">\n                                <div class=\"btn-group dropup\">\n                                    <button\n                                        type=\"button\"\n                                        v-b-tooltip.hover.bottom\n                                        :title=\"titleRulesMenu\"\n                                        class=\"rule-menu-rules-button primary-button dropdown-toggle\"\n                                        data-toggle=\"dropdown\"\n                                    >\n                                        <span class=\"fa fa-plus\"></span> {{ l(\"Rules\") }}<span class=\"caret\"></span>\n                                    </button>\n                                    <div class=\"dropdown-menu\" role=\"menu\">\n                                        <rule-target-component :builder=\"this\" rule-type=\"sort\" />\n                                        <rule-target-component :builder=\"this\" rule-type=\"remove_columns\" />\n                                        <rule-target-component :builder=\"this\" rule-type=\"split_columns\" />\n                                        <rule-target-component :builder=\"this\" rule-type=\"swap_columns\" />\n                                        <a\n                                            href=\"javascript:void(0)\"\n                                            class=\"dropdown-item rule-link rule-link-mapping\"\n                                            @click=\"displayRuleType = 'mapping'\"\n                                            >Add / Modify Column Definitions</a\n                                        >\n                                    </div>\n                                </div>\n                                <div class=\"btn-group dropup\">\n                                    <button\n                                        type=\"button\"\n                                        v-b-tooltip.hover.bottom\n                                        :title=\"titleFilterMenu\"\n                                        class=\"rule-menu-filter-button primary-button dropdown-toggle\"\n                                        data-toggle=\"dropdown\"\n                                    >\n                                        <span class=\"fa fa-plus\"></span> {{ l(\"Filter\") }}<span class=\"caret\"></span>\n                                    </button>\n                                    <div class=\"dropdown-menu\" role=\"menu\">\n                                        <rule-target-component :builder=\"this\" rule-type=\"add_filter_regex\" />\n                                        <rule-target-component :builder=\"this\" rule-type=\"add_filter_matches\" />\n                                        <rule-target-component :builder=\"this\" rule-type=\"add_filter_compare\" />\n                                        <rule-target-component :builder=\"this\" rule-type=\"add_filter_empty\" />\n                                        <rule-target-component :builder=\"this\" rule-type=\"add_filter_count\" />\n                                    </div>\n                                </div>\n                                <div class=\"btn-group dropup\">\n                                    <button\n                                        type=\"button\"\n                                        v-b-tooltip.hover.bottom\n                                        :title=\"titleColumMenu\"\n                                        class=\"rule-menu-column-button primary-button dropdown-toggle\"\n                                        data-toggle=\"dropdown\"\n                                    >\n                                        <span class=\"fa fa-plus\"></span> {{ l(\"Column\") }}<span class=\"caret\"></span>\n                                    </button>\n                                    <div class=\"dropdown-menu\" role=\"menu\">\n                                        <rule-target-component :builder=\"this\" rule-type=\"add_column_basename\" />\n                                        <rule-target-component\n                                            :builder=\"this\"\n                                            rule-type=\"add_column_metadata\"\n                                            v-if=\"metadataOptions\"\n                                        />\n                                        <rule-target-component\n                                            :builder=\"this\"\n                                            rule-type=\"add_column_group_tag_value\"\n                                            v-if=\"hasTagsMetadata\"\n                                        />\n                                        <rule-target-component :builder=\"this\" rule-type=\"add_column_regex\" />\n                                        <rule-target-component :builder=\"this\" rule-type=\"add_column_concatenate\" />\n                                        <rule-target-component :builder=\"this\" rule-type=\"add_column_rownum\" />\n                                        <rule-target-component :builder=\"this\" rule-type=\"add_column_value\" />\n                                        <rule-target-component :builder=\"this\" rule-type=\"add_column_substr\" />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!--  flex-column column -->\n                <!--  style=\"width: 70%;\" -->\n                <div\n                    class=\"table-column\"\n                    v-bind:class=\"orientation\"\n                    style=\"width: 100%;\"\n                    v-if=\"initialElements !== null\"\n                >\n                    <hot-table\n                        id=\"hot-table\"\n                        ref=\"hotTable\"\n                        :data=\"hotData.data\"\n                        :colHeaders=\"colHeadersDisplay\"\n                        :readOnly=\"true\"\n                        stretchH=\"all\"\n                    >\n                    </hot-table>\n                </div>\n            </div>\n        </rule-modal-middle>\n        <rule-modal-footer v-if=\"ruleView == 'source'\">\n            <b-button v-b-tooltip.hover :title=\"titleSourceCancel\" @click=\"cancelSourceEdit\" class=\"rule-btn-cancel\">\n                {{ l(\"Cancel\") }}\n            </b-button>\n            <b-button v-b-tooltip.hover :title=\"titleSourceReset\" class=\"creator-reset-btn rule-btn-reset\">\n                {{ l(\"Reset\") }}\n            </b-button>\n            <b-button v-b-tooltip.hover :title=\"titleSourceApply\" @click=\"attemptRulePreview\" class=\"rule-btn-okay\">\n                {{ l(\"Apply\") }}\n            </b-button>\n        </rule-modal-footer>\n        <rule-modal-footer v-else-if=\"ruleView == 'normal'\">\n            <div class=\"rule-footer-inputs\" slot=\"inputs\">\n                <label v-if=\"elementsType == 'datasets'\"> {{ l(\"Hide original elements\") }}: </label>\n                <input type=\"checkbox\" v-model=\"hideSourceItems\" v-if=\"elementsType == 'datasets'\" />\n                <div class=\"rule-footer-extension-group\" v-if=\"extension && showFileTypeSelector\">\n                    <label> {{ l(\"Type\") }}: </label>\n                    <select2 name=\"extension\" class=\"extension-select\" v-model=\"extension\">\n                        <option v-for=\"col in extensions\" :value=\"col['id']\" :key=\"col.id\">{{ col[\"text\"] }}</option>\n                    </select2>\n                </div>\n                <div class=\"rule-footer-genome-group\" v-if=\"genome && showGenomeSelector\">\n                    <label> {{ l(\"Genome\") }}: </label>\n                    <select2 class=\"genome-select\" v-model=\"genome\">\n                        <option v-for=\"col in genomes\" :value=\"col['id']\" :key=\"col.id\">{{ col[\"text\"] }}</option>\n                    </select2>\n                </div>\n                <label v-if=\"showAddNameTag\"> {{ l(\"Add nametag for name\") }}: </label>\n                <input type=\"checkbox\" v-model=\"addNameTag\" v-if=\"showAddNameTag\" />\n                <div class=\"rule-footer-name-group\" v-if=\"showCollectionNameInput\">\n                    <b-input\n                        class=\"collection-name\"\n                        :placeholder=\"namePlaceholder\"\n                        :title=\"namePlaceholder\"\n                        v-b-tooltip.hover\n                        v-model=\"collectionName\"\n                    />\n                    <label> {{ l(\"Name\") }}: </label>\n                </div>\n            </div>\n\n            <b-button\n                v-b-tooltip.hover\n                :help=\"titleCancel\"\n                @click=\"cancel\"\n                class=\"creator-cancel-btn rule-btn-cancel\"\n                tabindex=\"-1\"\n            >\n                {{ l(\"Cancel\") }}\n            </b-button>\n            <b-button\n                v-b-tooltip.hover\n                @click=\"resetRulesAndState\"\n                :title=\"titleReset\"\n                class=\"creator-reset-btn rule-btn-reset\"\n            >\n                {{ l(\"Reset\") }}\n            </b-button>\n            <b-button\n                v-b-tooltip.hover\n                @click=\"createCollection\"\n                :title=\"titleFinish\"\n                class=\"create-collection rule-btn-okay\"\n                variant=\"primary\"\n                :disabled=\"!validInput\"\n            >\n                {{ finishButtonTitle }}\n            </b-button>\n        </rule-modal-footer>\n    </state-div>\n    <state-div v-else-if=\"state == 'wait'\">\n        <rule-modal-header v-if=\"importType == 'datasets'\">\n            {{\n                l(\n                    \"Datasets submitted to Galaxy for creation, this dialog will close when dataset creation is complete. You may close this dialog at any time, but you will not be informed of errors with dataset creation and you may have to refresh your history manually to view new datasets once complete.\"\n                )\n            }}\n        </rule-modal-header>\n        <rule-modal-header v-else-if=\"importType == 'collections'\">\n            {{\n                l(\n                    \"Galaxy is waiting for collection creation, this dialog will close when this is complete. You may close this dialog at any time, but you will not be informed of errors with collection creation and you may have to refresh your history manually to view new collections once complete.\"\n                )\n            }}\n        </rule-modal-header>\n        <rule-modal-footer>\n            <b-button @click=\"cancel\" class=\"creator-cancel-btn\" tabindex=\"-1\"> {{ l(\"Close\") }} </b-button>\n        </rule-modal-footer>\n    </state-div>\n    <state-div v-else-if=\"state == 'error'\">\n        <!-- TODO: steal styling from paired collection builder warning... -->\n        <rule-modal-header> A problem was encountered. </rule-modal-header>\n        <rule-modal-middle>\n            <p class=\"errormessagelarge\">{{ errorMessage }}</p>\n        </rule-modal-middle>\n        <rule-modal-footer>\n            <b-button v-b-tooltip.hover :title=\"titleCancel\" @click=\"cancel\" class=\"creator-cancel-btn\" tabindex=\"-1\">\n                {{ l(\"Close\") }}\n            </b-button>\n            <b-button v-b-tooltip.hover :title=\"titleErrorOkay\" @click=\"state = 'build'\" tabindex=\"-1\">\n                {{ l(\"Okay\") }}\n            </b-button>\n        </rule-modal-footer>\n    </state-div>\n</template>\n<script>\nimport $ from \"jquery\";\nimport _ from \"underscore\";\nimport { getAppRoot } from \"onload/loadConfig\";\nimport { getGalaxyInstance } from \"app\";\nimport AjaxQueue from \"utils/ajax-queue\";\nimport axios from \"axios\";\nimport _l from \"utils/localization\";\nimport HotTable from \"@handsontable/vue\";\nimport UploadUtils from \"mvc/upload/upload-utils\";\nimport JobStatesModel from \"mvc/history/job-states-model\";\nimport RuleDefs from \"mvc/rules/rule-definitions\";\nimport Vue from \"vue\";\nimport BootstrapVue from \"bootstrap-vue\";\nimport Select2 from \"components/Select2\";\n\nVue.use(BootstrapVue);\n\nconst RULES = RuleDefs.RULES;\nconst MAPPING_TARGETS = RuleDefs.MAPPING_TARGETS;\n\nconst ColumnSelector = {\n    template: `\n        <div class=\"rule-column-selector\" v-if=\"!multiple || !ordered\">\n            <label class=\"d-flex justify-content-end align-items-center\">\n                <span class=\"mr-auto\" v-b-tooltip.hover :title=\"help\">{{ label }}</span>\n                <div class=\"mr-1\" v-b-tooltip.hover :title=\"title\"><select2 :value=\"target\" @input=\"handleInput\" :multiple=\"multiple\">\n                    <option v-for=\"(col, index) in colHeaders\" :value=\"index\">{{ col }}</option>\n                </select2></div>\n                <slot></slot>\n            </label>\n        </div>\n        <div class=\"rule-column-selector\" v-else>\n            <span>{{ label }}</span>\n            <slot></slot>\n            <ol>\n                <li v-for=\"(targetEl, index) in target\"\n                    v-bind:index=\"index\"\n                    v-bind:key=\"targetEl\"\n                    class=\"rule-column-selector-target\">\n                    {{ colHeaders[targetEl] }}\n                    <span class=\"fa fa-times rule-column-selector-target-remove\" @click=\"handleRemove(index)\"></span>\n                    <span class=\"fa fa-arrow-up rule-column-selector-up\" v-if=\"index !== 0\" @click=\"moveUp(index)\"></span>\n                    <span class=\"fa fa-arrow-down rule-column-selector-down\" v-if=\"index < target.length - 1\" @click=\"moveUp(index + 1)\"></span>\n                </li>\n                <li v-if=\"this.target.length < this.colHeaders.length\">\n                    <span class=\"rule-column-selector-target-add\" v-if=\"!orderedEdit\">\n                        <i @click=\"$emit('update:orderedEdit', true)\">... {{ l(\"Assign Another Column\") }}</i>\n                    </span>\n                    <span class=\"rule-column-selector-target-select\" v-else>\n                        <select2 @input=\"handleAdd\" placeholder=\"Select a column\">\n                            <option /><!-- empty option selection for placeholder -->\n                            <option v-for=\"(col, index) in remainingHeaders\" :value=\"index\">{{ col }}</option>\n                        </select2>\n                    </span>\n                </li>\n            </ol>\n        </div>\n    `,\n    data: function() {\n        return {\n            l: _l\n        };\n    },\n    props: {\n        target: {\n            required: true\n        },\n        label: {\n            required: false,\n            type: String,\n            default: _l(\"From Column\")\n        },\n        help: {\n            required: false\n        },\n        colHeaders: {\n            type: Array,\n            required: true\n        },\n        multiple: {\n            type: Boolean,\n            required: false,\n            default: false\n        },\n        ordered: {\n            type: Boolean,\n            required: false,\n            default: false\n        },\n        valueAsList: {\n            type: Boolean,\n            required: false,\n            default: false\n        },\n        orderedEdit: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n    computed: {\n        remainingHeaders() {\n            const colHeaders = this.colHeaders;\n            if (!this.multiple) {\n                return colHeaders;\n            }\n            const remaining = {};\n            for (let key in colHeaders) {\n                if (this.target.indexOf(parseInt(key)) === -1) {\n                    remaining[key] = colHeaders[key];\n                }\n            }\n            return remaining;\n        },\n        title() {\n            return _l(\"Select a column\");\n        }\n    },\n    methods: {\n        handleInput(value) {\n            if (this.multiple) {\n                // https://stackoverflow.com/questions/262427/why-does-parseint-yield-nan-with-arraymap\n                let val = value.map(idx => parseInt(idx));\n                this.$emit(\"update:target\", val);\n            } else {\n                let val = parseInt(value);\n                if (this.valueAsList) {\n                    val = [val];\n                }\n                this.$emit(\"update:target\", val);\n            }\n        },\n        handleAdd(value) {\n            this.target.push(parseInt(value));\n            this.$emit(\"update:orderedEdit\", false);\n        },\n        handleRemove(index) {\n            this.target.splice(index, 1);\n        },\n        moveUp(value) {\n            const swapVal = this.target[value - 1];\n            Vue.set(this.target, value - 1, this.target[value]);\n            Vue.set(this.target, value, swapVal);\n        }\n    },\n    components: {\n        Select2\n    }\n};\n\nconst RegularExpressionInput = {\n    template: `\n        <div>\n            <label for=\"regular_expression\" v-b-tooltip.hover :title=\"title\">{{ label }}</label>\n            <span v-b-popover.html=\"popoverContent\" :title=\"popoverTitle\" class=\"fa fa-question\"></span>\n            <input v-b-tooltip.hover.left :title=\"title\" name=\"regular_expression\" class=\"rule-regular-expression\" type=\"text\" :value=\"target\" @input=\"$emit('update:target', $event.target.value)\" />\n        </div>\n    `,\n    props: {\n        target: {\n            required: true\n        }\n    },\n    computed: {\n        label() {\n            return _l(\"Regular Expression\");\n        },\n        title() {\n            return _l(\"Enter a regular expression.\");\n        },\n        popoverTitle() {\n            return _l(\"Regular Expressions\");\n        },\n        popoverContent() {\n            return _l(\n                `Regular expressions are patterns used to match character combinations in strings. This input accepts Python-style regular expressions, find more information about these in <a href=\"https://pythonforbiologists.com/regular-expressions/\">this Python for Biologists tutorial</a>.`\n            );\n        }\n    }\n};\n\nconst RuleDisplay = {\n    template: `\n        <li class=\"rule\">\n            <span class=\"rule-display\">\n                <span class=\"mr-1\">{{ title }}</span>\n                <span v-b-tooltip.hover :title=\"editTitle\" class=\"fa fa-edit mr-1\" @click=\"edit\"></span>\n                <span v-b-tooltip.hover :title=\"removeTitle\" class=\"fa fa-times map\" @click=\"remove\"></span>\n            </span>\n            <span class=\"rule-warning\" v-if=\"rule.warn\">\n                {{ rule.warn }}\n            </span>\n            <span class=\"rule-error\" v-if=\"rule.error\">\n                <span class=\"alert-message\">{{ rule.error }}</span>\n            </span>\n        </li>\n    `,\n    props: {\n        rule: {\n            required: true,\n            type: Object\n        },\n        colHeaders: {\n            type: Array,\n            required: true\n        }\n    },\n    computed: {\n        title() {\n            const ruleType = this.rule.type;\n            return RULES[ruleType].display(this.rule, this.colHeaders);\n        },\n        editTitle() {\n            return _l(\"Edit this rule.\");\n        },\n        removeTitle() {\n            return _l(\"Remove this rule.\");\n        }\n    },\n    methods: {\n        edit() {\n            this.$emit(\"edit\");\n        },\n        remove() {\n            this.$emit(\"remove\");\n        }\n    }\n};\n\nconst IdentifierDisplay = {\n    template: `\n      <li class=\"rule\">\n        <span v-b-tooltip.hover :title=\"help\">Set {{ columnsLabel }} as {{ typeDisplay }}</span>\n        <span v-b-tooltip.hover :title=\"titleEdit\" class=\"fa fa-edit\" @click=\"edit\"></span>\n        <span v-b-tooltip.hover :title=\"titleRemove\" class=\"fa fa-times\" @click=\"remove\"></span>\n      </li>\n    `,\n    props: {\n        type: {\n            type: String,\n            required: true\n        },\n        columns: {\n            required: true\n        },\n        colHeaders: {\n            type: Array,\n            required: true\n        }\n    },\n    methods: {\n        remove() {\n            this.$emit(\"remove\");\n        },\n        edit() {\n            this.$emit(\"edit\");\n        }\n    },\n    computed: {\n        typeDisplay() {\n            return MAPPING_TARGETS[this.type].label;\n        },\n        help() {\n            return MAPPING_TARGETS[this.type].help || \"\";\n        },\n        titleEdit() {\n            return _l(\"Edit column definition\");\n        },\n        titleRemove() {\n            return _l(\"Remove this column definition\");\n        },\n        columnsLabel() {\n            return RuleDefs.columnDisplay(this.columns, this.colHeaders);\n        }\n    }\n};\n\nconst RuleTargetComponent = {\n    template: `<a class=\"rule-link dropdown-item\" href=\"javascript:void(0)\" :class=\"linkClassName\" @click=\"builder.addNewRule(ruleType)\">{{title}}</a>`,\n    props: {\n        ruleType: {\n            type: String,\n            required: true\n        },\n        builder: {\n            required: true\n        }\n    },\n    computed: {\n        linkClassName() {\n            return \"rule-link-\" + this.ruleType.replace(/_/g, \"-\");\n        },\n        title() {\n            return RULES[this.ruleType].title;\n        }\n    }\n};\n\nconst RuleComponent = {\n    template: `\n    <div v-if=\"ruleType == displayRuleType\" class=\"rule-editor\" :class=\"typeToClass\">\n        <slot></slot>\n        <div class=\"buttons rule-edit-buttons d-flex justify-content-end\">\n           <button type=\"button\" class=\"btn rule-editor-cancel mr-1\" @click=\"cancel\">{{ cancelLabel }}</button>\n           <button type=\"button\" class=\"btn btn-primary rule-editor-ok\" @click=\"okay\">{{ applyLabel }}</button>\n        </div>\n    </div>`,\n    data: function() {\n        return {\n            applyLabel: _l(\"Apply\"),\n            cancelLabel: _l(\"Cancel\")\n        };\n    },\n    props: {\n        ruleType: {\n            type: String,\n            required: true\n        },\n        displayRuleType: {\n            required: true\n        },\n        builder: {\n            required: true\n        }\n    },\n    methods: {\n        cancel() {\n            this.builder.displayRuleType = null;\n        },\n        okay() {\n            this.builder.handleRuleSave(this.ruleType);\n            this.cancel();\n        }\n    },\n    computed: {\n        typeToClass() {\n            return \"rule-edit-\" + this.ruleType.replace(/_/g, \"-\");\n        }\n    }\n};\n\nconst StateDiv = {\n    template: `\n        <div class=\"rule-collection-creator collection-creator flex-row-container\">\n            <slot></slot>\n        </div>`\n};\n\nconst RuleModalHeader = {\n    template: `<div class=\"header flex-row no-flex\"><slot></slot></div>`\n};\n\nconst RuleModalMiddle = {\n    template: `<div class=\"middle flex-row flex-row-container\"><slot></slot></div>`\n};\n\nconst RuleModalFooter = {\n    template: `\n        <div class=\"rule-footer footer flex-row no-flex\">\n            <slot name=\"inputs\"></slot>\n            <div class=\"actions clear vertically-spaced\">\n                <div class=\"main-options float-right\">\n                    <slot></slot>\n                </div>\n            </div>\n        </div>`\n};\n\nexport default {\n    data: function() {\n        let orientation = \"vertical\";\n        let mapping, rules;\n        if (this.initialRules) {\n            mapping = this.initialRules.mapping.slice();\n            rules = this.initialRules.rules.slice();\n        } else {\n            if (this.elementsType == \"ftp\") {\n                mapping = [{ type: \"ftp_path\", columns: [0] }];\n            } else if (this.elementsType == \"datasets\") {\n                mapping = [{ type: \"list_identifiers\", columns: [1] }];\n            } else {\n                mapping = [];\n            }\n            rules = [];\n            if (this.elementsType == \"collection_contents\") {\n                if (this.initialElements !== null) {\n                    const collectionType = this.initialElements.collection_type;\n                    const collectionTypeRanks = collectionType.split(\":\");\n                    for (let index in collectionTypeRanks) {\n                        rules.push({\n                            type: \"add_column_metadata\",\n                            value: \"identifier\" + index\n                        });\n                    }\n                } else {\n                    orientation = \"horizontal\";\n                    // just assume a list is given by default.\n                    rules.push({\n                        type: \"add_column_metadata\",\n                        value: \"identifier0\"\n                    });\n                }\n            } else if (this.elementsType == \"datasets\") {\n                rules.push(\n                    {\n                        type: \"add_column_metadata\",\n                        value: \"hid\"\n                    },\n                    {\n                        type: \"add_column_metadata\",\n                        value: \"name\"\n                    }\n                );\n            } else if (this.elementsType == \"library_datasets\") {\n                rules.push({\n                    type: \"add_column_metadata\",\n                    value: \"name\"\n                });\n            } else if (this.elementsType == \"ftp\") {\n                rules.push({\n                    type: \"add_column_metadata\",\n                    value: \"path\"\n                });\n            }\n        }\n        return {\n            rules: rules,\n            mapping: mapping,\n            state: \"build\", // 'build', 'error', 'wait',\n            ruleView: \"normal\", // 'normal' or 'source'\n            ruleSource: \"\",\n            ruleSourceJson: null,\n            ruleSourceError: null,\n            errorMessage: \"\",\n            jaggedData: false,\n            waitingJobState: \"new\",\n            titleReset: _l(\"Undo all reordering and discards\"),\n            titleNumericSort: _l(\n                \"By default columns will be sorted lexicographically, check this option if the columns are numeric values and should be sorted as numbers\"\n            ),\n            titleInvertFilterRegex: _l(\"Remove rows not matching the specified regular expression at specified column\"),\n            titleInvertFilterEmpty: _l(\"Remove rows that have non-empty values at specified column\"),\n            titleInvertFilterMatches: _l(\"Remove rows not matching supplied value\"),\n            titleViewSource: _l(\n                \"Advanced Option: View and or edit the JSON representation of the rules to apply to this tabular data\"\n            ),\n            titleSourceCancel: _l(\"Stop editing rules and dismiss changes\"),\n            titleSourceReset: _l(\"Reset text area to current set of rules\"),\n            titleSourceApply: _l(\"Apply changes to rule source and return to rule preview\"),\n            titleRulesMenu: _l(\"General rules to apply\"),\n            titleFilterMenu: _l(\"Rules that filter rows from the data\"),\n            titleColumMenu: _l(\"Rules that generate new columns\"),\n            titleRemoveMapping: _l(\"Remove column definition assignment\"),\n            titleApplyColumnDefinitions: _l(\"Apply these column definitions and return to rules preview\"),\n            titleErrorOkay: _l(\"Dismiss this error and return to the rule builder to try again with new rules\"),\n            namePlaceholder: _l(\"Enter a name for your new collection\"),\n            activeRuleIndex: null,\n            addColumnRegexTarget: 0,\n            addColumnBasenameTarget: 0,\n            addColumnRegexExpression: \"\",\n            addColumnRegexReplacement: null,\n            addColumnRegexGroupCount: null,\n            addColumnRegexType: \"global\",\n            addColumnMetadataValue: 0,\n            addColumnGroupTagValueValue: \"\",\n            addColumnGroupTagValueDefault: \"\",\n            addColumnConcatenateTarget0: 0,\n            addColumnConcatenateTarget1: 0,\n            addColumnRownumStart: 1,\n            addColumnSubstrTarget: 0,\n            addColumnSubstrType: \"keep_prefix\",\n            addColumnSubstrLength: 1,\n            addColumnValue: \"\",\n            removeColumnTargets: [],\n            addFilterRegexTarget: 0,\n            addFilterRegexExpression: \"\",\n            addFilterRegexInvert: false,\n            addFilterMatchesTarget: 0,\n            addFilterMatchesValue: \"\",\n            addFilterMatchesInvert: false,\n            addFilterEmptyTarget: 0,\n            addFilterEmptyInvert: false,\n            addFilterCompareTarget: 0,\n            addFilterCompareValue: 0,\n            addFilterCompareType: \"less_than\",\n            addFilterCountN: 1,\n            addFilterCountInvert: false,\n            addFilterCountWhich: \"first\",\n            addSortingTarget: 0,\n            addSortingNumeric: false,\n            splitColumnsTargets0: [],\n            splitColumnsTargets1: [],\n            swapColumnsTarget0: 0,\n            swapColumnsTarget1: 0,\n            collectionName: \"\",\n            displayRuleType: null,\n            extensions: [],\n            extension: null,\n            genomes: [],\n            genome: null,\n            hideSourceItems: this.defaultHideSourceItems,\n            addNameTag: false,\n            orientation: orientation\n        };\n    },\n    props: {\n        initialElements: {\n            required: true\n        },\n        importType: {\n            type: String,\n            required: false,\n            default: \"collections\"\n        },\n        elementsType: {\n            type: String,\n            required: false,\n            default: \"datasets\"\n        },\n        // required if elementsType is \"datasets\" - hook into Backbone code for creating\n        // collections from HDAs, etc...\n        creationFn: {\n            required: false,\n            type: Function\n        },\n        // required if elementsType is \"collection_contents\" - hook into tool form to update\n        // rule parameter\n        saveRulesFn: {\n            required: false,\n            type: Function\n        },\n        initialRules: {\n            required: false,\n            type: Object\n        },\n        defaultHideSourceItems: {\n            type: Boolean,\n            required: false,\n            default: true\n        },\n        // Callbacks sent in by modal code.\n        oncancel: {\n            required: true,\n            type: Function\n        },\n        oncreate: {\n            required: true,\n            type: Function\n        },\n        ftpUploadSite: {\n            type: String,\n            required: false,\n            default: null\n        }\n    },\n    computed: {\n        exisistingDatasets() {\n            const elementsType = this.elementsType;\n            return (\n                elementsType === \"datasets\" ||\n                elementsType === \"collection_contents\" ||\n                elementsType === \"library_datasets\"\n            );\n        },\n        showFileTypeSelector() {\n            return !this.exisistingDatasets && !this.mappingAsDict.file_type;\n        },\n        showGenomeSelector() {\n            return !this.exisistingDatasets && !this.mappingAsDict.dbkey;\n        },\n        showCollectionNameInput() {\n            return (\n                this.importType == \"collections\" &&\n                this.elementsType != \"collection_contents\" &&\n                !this.mappingAsDict.collection_name\n            );\n        },\n        showAddNameTag() {\n            return this.importType == \"collections\" && this.elementsType != \"collection_contents\";\n        },\n        titleFinish() {\n            if (this.elementsType == \"datasets\" || this.elementsType == \"library_datasets\") {\n                return _l(\"Create new collection from specified rules and datasets\");\n            } else if (this.elementsType == \"collection_contents\") {\n                return _l(\"Save rules and return to tool form\");\n            } else {\n                return _l(\"Upload collection using specified rules\");\n            }\n        },\n        titleCancel() {\n            if (this.importType == \"datasets\") {\n                return _l(\"Close this modal and do not upload any datasets\");\n            } else {\n                return _l(\"Close this modal and do not create any collections\");\n            }\n        },\n        finishButtonTitle() {\n            if (this.elementsType == \"datasets\" || this.elementsType == \"library_datasets\") {\n                return _l(\"Create\");\n            } else if (this.elementsType == \"collection_contents\") {\n                return _l(\"Save\");\n            } else {\n                return _l(\"Upload\");\n            }\n        },\n        hasActiveMappingEdit() {\n            const has = _.any(_.values(this.mapping), mapping => mapping.editing);\n            return has;\n        },\n        activeRule() {\n            return this.activeRuleIndex !== null && this.rules[this.activeRuleIndex];\n        },\n        activeRuleColHeaders() {\n            const rulesHeaders = this.activeRuleIndex !== null && this.colHeadersPerRule[this.activeRuleIndex];\n            return rulesHeaders || this.colHeaders;\n        },\n        horizontal() {\n            return this.orientation == \"horizontal\";\n        },\n        vertical() {\n            return this.orientation == \"vertical\";\n        },\n        mappedTargets() {\n            const targets = [];\n            for (let mapping of this.mapping) {\n                targets.push(mapping.type);\n            }\n            return targets;\n        },\n        unmappedTargets() {\n            const targets = [];\n            const mappedTargets = this.mappedTargets;\n            for (let target in MAPPING_TARGETS) {\n                const targetModes = MAPPING_TARGETS[target].modes;\n\n                if (targetModes && targetModes.indexOf(this.elementsType) < 0) {\n                    continue;\n                }\n\n                const targetDefinition = MAPPING_TARGETS[target];\n                const targetImportType = targetDefinition.importType;\n                if (targetImportType && this.importType != targetImportType) {\n                    continue;\n                }\n                if (!this.ftpUploadSite && targetDefinition.requiresFtp) {\n                    continue;\n                }\n                if (mappedTargets.indexOf(target) < 0) {\n                    targets.push(target);\n                }\n            }\n            return targets;\n        },\n        colHeaders() {\n            let { data, columns } = this.hotData;\n            return RuleDefs.colHeadersFor(data, columns);\n        },\n        colHeadersDisplay() {\n            const formattedHeaders = [];\n            for (let colIndex in this.colHeaders) {\n                const colHeader = this.colHeaders[colIndex];\n                formattedHeaders[colIndex] = `<b>${_.escape(colHeader)}</b>`;\n                const mappingDisplay = [];\n                for (let mapping of this.mapping) {\n                    if (mapping.columns.indexOf(parseInt(colIndex)) !== -1) {\n                        const mappingDef = MAPPING_TARGETS[mapping.type];\n                        mappingDisplay.push(`<i>${_.escape(mappingDef.columnHeader || mappingDef.label)}</i>`);\n                    }\n                }\n                if (mappingDisplay.length == 1) {\n                    formattedHeaders[colIndex] += ` (${mappingDisplay[0]})`;\n                } else if (mappingDisplay.length > 1) {\n                    formattedHeaders[colIndex] += ` (${[\n                        mappingDisplay.slice(0, -1).join(\", \"),\n                        mappingDisplay.slice(-1)[0]\n                    ].join(\" & \")})`;\n                }\n            }\n            return formattedHeaders;\n        },\n        mappingAsDict() {\n            const asDict = {};\n            for (let mapping of this.mapping) {\n                asDict[mapping.type] = mapping;\n            }\n            return asDict;\n        },\n        metadataOptions() {\n            let metadataOptions = {};\n            if (this.elementsType == \"collection_contents\") {\n                let collectionType;\n                if (this.initialElements) {\n                    collectionType = this.initialElements.collection_type;\n                } else {\n                    // give a bunch of different options if not constrained with given input\n                    collectionType = \"list:list:list:paired\";\n                }\n                const collectionTypeRanks = collectionType.split(\":\");\n                for (let index in collectionTypeRanks) {\n                    const collectionTypeRank = collectionTypeRanks[index];\n                    if (collectionTypeRank == \"list\") {\n                        // TODO: drop the numeral at the end if only flat list\n                        metadataOptions[\"identifier\" + index] = _l(\"List Identifier \") + (parseInt(index) + 1);\n                    } else {\n                        metadataOptions[\"identifier\" + index] = _l(\"Paired Identifier\");\n                    }\n                }\n                metadataOptions[\"tags\"] = _l(\"Tags\");\n            } else if (this.elementsType == \"ftp\") {\n                metadataOptions[\"path\"] = _l(\"Path\");\n            } else if (this.elementsType == \"library_datasets\") {\n                metadataOptions[\"name\"] = _l(\"Name\");\n            } else if (this.elementsType == \"datasets\") {\n                metadataOptions[\"hid\"] = _l(\"History ID (hid)\");\n                metadataOptions[\"name\"] = _l(\"Name\");\n            } else {\n                metadataOptions = null;\n            }\n            return metadataOptions;\n        },\n        hasTagsMetadata() {\n            // TODO: allow for dataset, library_datasets also - here and just above in metadataOptions.\n            return this.elementsType == \"collection_contents\";\n        },\n        collectionType() {\n            let identifierColumns = [];\n            if (this.mappingAsDict.list_identifiers) {\n                identifierColumns = this.mappingAsDict.list_identifiers.columns;\n            }\n            let collectionType = identifierColumns.map(col => \"list\").join(\":\");\n            if (this.mappingAsDict.paired_identifier) {\n                if (collectionType) {\n                    collectionType += \":paired\";\n                } else {\n                    collectionType = \"paired\";\n                }\n            }\n            return collectionType;\n        },\n        validInput() {\n            const identifierColumns = this.identifierColumns();\n            const mappingAsDict = this.mappingAsDict;\n            const buildingCollection = this.importType == \"collections\";\n            const requiresName =\n                buildingCollection && this.elementsType != \"collection_contents\" && !mappingAsDict.collection_name;\n\n            let valid = true;\n            if (requiresName) {\n                valid = this.collectionName.length > 0;\n            }\n\n            if (mappingAsDict.ftp_path && mappingAsDict.url) {\n                // Can only specify one of these.\n                valid = false;\n            }\n\n            const requiresSourceColumn = this.elementsType == \"ftp\" || this.elementsType == \"raw\";\n            if (requiresSourceColumn && !mappingAsDict.ftp_path && !mappingAsDict.url) {\n                valid = false;\n            }\n            for (var rule of this.rules) {\n                if (rule.error) {\n                    valid = false;\n                }\n            }\n\n            if (buildingCollection && identifierColumns.length == 0) {\n                valid = false;\n            }\n            return valid;\n        },\n        hotData() {\n            let data, sources, columns;\n            if (\n                this.elementsType == \"datasets\" ||\n                this.elementsType == \"library_datasets\" ||\n                this.elementsType == \"ftp\"\n            ) {\n                sources = this.initialElements.slice();\n                data = sources.map(el => []);\n                columns = [];\n            } else if (this.elementsType == \"collection_contents\") {\n                const collection = this.initialElements;\n                if (collection) {\n                    const obj = this.populateElementsFromCollectionDescription(\n                        collection.elements,\n                        collection.collection_type\n                    );\n                    data = obj.data;\n                    sources = obj.sources;\n                    columns = [];\n                } else {\n                    data = [];\n                    sources = [];\n                    columns = [];\n                }\n            } else {\n                data = this.initialElements.slice();\n                sources = data.map(el => null);\n                columns = [];\n                if (this.initialElements) {\n                    this.initialElements[0].forEach(() => columns.push(\"new\"));\n                }\n            }\n            return RuleDefs.applyRules(data, sources, columns, this.rules);\n        },\n        colHeadersPerRule() {\n            return this.hotData.colHeadersPerRule;\n        }\n    },\n    methods: {\n        l(str) {\n            // _l conflicts private methods of Vue internals, expose as l instead\n            return _l(str);\n        },\n        cancel() {\n            this.oncancel();\n        },\n        mappingTargets() {\n            return MAPPING_TARGETS;\n        },\n        resetRules() {\n            this.rules.splice(0, this.rules.length);\n            this.mapping.splice(0, this.mapping.length);\n        },\n        resetRulesAndState() {\n            this.resetRules();\n            this.state = \"build\";\n            this.errorMessage = \"\";\n            this.collectionName = \"\";\n        },\n        addNewRule(ruleType) {\n            RULES[ruleType].init(this);\n            this.displayRuleType = ruleType;\n            this.activeRuleIndex = null;\n        },\n        handleRuleSave(ruleType) {\n            const rule = this.activeRule;\n            if (rule) {\n                RULES[ruleType].save(this, rule);\n            } else {\n                const rule = { type: ruleType };\n                RULES[ruleType].save(this, rule);\n                this.rules.push(rule);\n            }\n        },\n        viewSource() {\n            this.resetSource();\n            this.ruleView = \"source\";\n        },\n        resetSource() {\n            const replacer = function(key, value) {\n                if (key == \"error\" || key == \"warn\") {\n                    return undefined;\n                }\n                return value;\n            };\n            const asJson = {\n                rules: this.rules,\n                mapping: this.mapping\n            };\n            if (!this.exisistingDatasets) {\n                if (this.extension !== UploadUtils.DEFAULT_EXTENSION) {\n                    asJson.extension = this.extension;\n                }\n                if (this.genome !== UploadUtils.DEFAULT_GENOME) {\n                    asJson.genome = this.genome;\n                }\n            }\n            this.ruleSourceJson = asJson;\n            this.ruleSource = JSON.stringify(asJson, replacer, \"  \");\n            this.ruleSourceError = null;\n        },\n        attemptRulePreview() {\n            // Leave source mode if rules are valid and view.\n            this.ruleSourceError = null;\n            let asJson;\n            try {\n                asJson = JSON.parse(this.ruleSource);\n            } catch (error) {\n                this.ruleSourceError = \"Problem parsing your rules.\";\n                return;\n            }\n            this.updateFromSource(asJson);\n            this.ruleView = \"normal\";\n        },\n        cancelSourceEdit() {\n            this.ruleSourceError = null;\n            this.ruleView = \"normal\";\n        },\n        updateFromSource(asJson) {\n            this.resetRules();\n            if (asJson.extension) {\n                this.extension = asJson.extension;\n            }\n            if (asJson.genome) {\n                this.genome = asJson.genome;\n            }\n            if (asJson.rules) {\n                this.rules = asJson.rules;\n            }\n            if (asJson.mapping) {\n                this.mapping = asJson.mapping;\n            }\n        },\n        addIdentifier(identifier) {\n            const multiple = this.mappingTargets()[identifier].multiple;\n            // If multiple selection, pop open a new column selector in edit mode.\n            const initialColumns = multiple ? [] : [0];\n            this.mapping.push({ type: identifier, columns: initialColumns, editing: multiple });\n        },\n        editRule(rule, index) {\n            const ruleType = rule.type;\n            this.activeRuleIndex = index;\n            RULES[ruleType].init(this, rule);\n            this.displayRuleType = ruleType;\n        },\n        removeRule(index) {\n            this.rules.splice(index, 1);\n        },\n        removeMapping(index) {\n            this.mapping.splice(index, 1);\n        },\n        refreshAndWait(response) {\n            let Galaxy = getGalaxyInstance();\n            if (Galaxy && Galaxy.currHistoryPanel) {\n                Galaxy.currHistoryPanel.refreshContents();\n            }\n            this.waitOnJob(response);\n        },\n        waitOnJob(response) {\n            const jobId = response.data.jobs[0].id;\n            const handleJobShow = jobResponse => {\n                const state = jobResponse.data.state;\n                this.waitingJobState = state;\n                if (JobStatesModel.NON_TERMINAL_STATES.indexOf(state) !== -1) {\n                    setTimeout(doJobCheck, 1000);\n                } else if (JobStatesModel.ERROR_STATES.indexOf(state) !== -1) {\n                    this.state = \"error\";\n                    this.errorMessage =\n                        \"Unknown error encountered while running your upload job, this could be a server issue or a problem with the upload definition.\";\n                    this.doFullJobCheck(jobId);\n                } else {\n                    let Galaxy = getGalaxyInstance();\n                    const history = Galaxy && Galaxy.currHistoryPanel && Galaxy.currHistoryPanel.model;\n                    history.refresh();\n                    this.oncreate();\n                }\n            };\n            const doJobCheck = () => {\n                axios\n                    .get(`${getAppRoot()}api/jobs/${jobId}`)\n                    .then(handleJobShow)\n                    .catch(this.renderFetchError);\n            };\n            setTimeout(doJobCheck, 1000);\n        },\n        doFullJobCheck(jobId) {\n            const handleJobShow = jobResponse => {\n                const stderr = jobResponse.data.stderr;\n                if (stderr) {\n                    let errorMessage = \"An error was encountered while running your upload job. \";\n                    if (stderr.indexOf(\"binary file contains inappropriate content\") > -1) {\n                        errorMessage +=\n                            \"The problem may be that the batch uploader will not automatically decompress your files the way the normal uploader does, please specify a correct extension or upload decompressed data.\";\n                    }\n                    errorMessage += \"Upload job completed with standard error: \" + stderr;\n                    this.errorMessage = errorMessage;\n                }\n            };\n            axios\n                .get(`${getAppRoot()}api/jobs/${jobId}?full=True`)\n                .then(handleJobShow)\n                .catch(this.renderFetchError);\n        },\n        renderFetchError(error) {\n            this.state = \"error\";\n            if (error.response) {\n                console.log(error.response);\n                this.errorMessage = error.response.data.err_msg;\n            } else {\n                console.log(error);\n                this.errorMessage = \"Unknown error encountered: \" + error;\n            }\n        },\n        swapOrientation() {\n            this.orientation = this.orientation == \"horizontal\" ? \"vertical\" : \"horizontal\";\n            const hotTable = this.$refs.hotTable.table;\n            if (this.orientation == \"horizontal\") {\n                this.$nextTick(function() {\n                    const fullWidth = $(\".rule-builder-body\").width();\n                    hotTable.updateSettings({\n                        width: fullWidth\n                    });\n                });\n            } else {\n                this.$nextTick(function() {\n                    const fullWidth = $(\".rule-builder-body\").width();\n                    hotTable.updateSettings({\n                        width: fullWidth - 270\n                    });\n                });\n            }\n        },\n        createCollection() {\n            this.state = \"wait\";\n            const name = this.collectionName;\n            const collectionType = this.collectionType;\n            if (this.elementsType == \"datasets\" || this.elementsType == \"library_datasets\") {\n                const elements = this.creationElementsFromDatasets();\n                if (this.state !== \"error\") {\n                    new AjaxQueue.AjaxQueue(\n                        _.map(elements, (elements, name) => {\n                            return () => {\n                                const response = this.creationFn(elements, collectionType, name, this.hideSourceItems);\n                                return response;\n                            };\n                        })\n                    )\n                        .done(this.oncreate)\n                        .fail(this.renderFetchError);\n                }\n            } else if (this.elementsType == \"collection_contents\") {\n                this.resetSource();\n                if (this.state !== \"error\") {\n                    this.saveRulesFn(this.ruleSourceJson);\n                    this.oncreate();\n                }\n            } else {\n                let Galaxy = getGalaxyInstance();\n                const historyId = Galaxy.currHistoryPanel.model.id;\n                let elements, targets;\n                if (collectionType) {\n                    targets = [];\n                    const elementsByCollectionName = this.creationElementsForFetch();\n                    for (let collectionName in elementsByCollectionName) {\n                        const target = {\n                            destination: { type: \"hdca\" },\n                            elements: elementsByCollectionName[collectionName],\n                            collection_type: collectionType,\n                            name: collectionName\n                        };\n                        if (this.addNameTag) {\n                            target[\"tags\"] = [\"name:\" + collectionName];\n                        }\n                        targets.push(target);\n                    }\n                } else {\n                    elements = this.creationDatasetsForFetch();\n                    targets = [\n                        {\n                            destination: { type: \"hdas\" },\n                            elements: elements,\n                            name: name\n                        }\n                    ];\n                }\n\n                if (this.state !== \"error\") {\n                    axios\n                        .post(`${getAppRoot()}api/tools/fetch`, {\n                            history_id: historyId,\n                            targets: targets,\n                            auto_decompress: true\n                        })\n                        .then(this.refreshAndWait)\n                        .catch(this.renderFetchError);\n                }\n            }\n        },\n        identifierColumns() {\n            const mappingAsDict = this.mappingAsDict;\n            let identifierColumns = [];\n            if (mappingAsDict.list_identifiers) {\n                identifierColumns = mappingAsDict.list_identifiers.columns.slice();\n            }\n            if (this.mappingAsDict.paired_identifier) {\n                identifierColumns.push(this.mappingAsDict.paired_identifier.columns[0]);\n            }\n            return identifierColumns;\n        },\n        buildRequestElements(createDatasetDescription, createSubcollectionDescription, subElementProp) {\n            const data = this.hotData.data;\n            const identifierColumns = this.identifierColumns();\n            if (identifierColumns.length < 1) {\n                console.log(\"Error but this shouldn't have happened, create button should have been disabled.\");\n                return;\n            }\n\n            const numIdentifierColumns = identifierColumns.length;\n            const collectionType = this.collectionType;\n            const elementsByName = {};\n\n            let dataByCollection = {};\n            const collectionNameMap = this.mappingAsDict.collection_name;\n            if (collectionNameMap) {\n                const collectionNameTarget = collectionNameMap.columns[0];\n                for (let dataIndex in data) {\n                    const row = data[dataIndex];\n                    const name = row[collectionNameTarget];\n                    if (!dataByCollection[name]) {\n                        dataByCollection[name] = {};\n                    }\n                    dataByCollection[name][dataIndex] = row;\n                }\n            } else {\n                // use global collection name from the form.\n                dataByCollection[this.collectionName] = data;\n            }\n\n            for (let collectionName in dataByCollection) {\n                const elements = [];\n                const identifiers = [];\n\n                for (let dataIndex in dataByCollection[collectionName]) {\n                    const rowData = data[dataIndex];\n\n                    // For each row, find place in depth for this element.\n                    let collectionTypeAtDepth = collectionType;\n                    let elementsAtDepth = elements;\n                    let identifiersAtDepth = identifiers;\n\n                    for (\n                        let identifierColumnIndex = 0;\n                        identifierColumnIndex < numIdentifierColumns;\n                        identifierColumnIndex++\n                    ) {\n                        // typeof indicates identifier is a string, but the raw string value coming from this data\n                        // structure sometimes does not work as expected with indexOf below, I don't understand why\n                        // but as a result this cast here seems needed.\n                        let identifier = String(rowData[identifierColumns[identifierColumnIndex]]);\n                        if (identifierColumnIndex + 1 == numIdentifierColumns) {\n                            // At correct final position in nested structure for this dataset.\n                            if (collectionTypeAtDepth === \"paired\") {\n                                if ([\"f\", \"1\", \"r1\", \"forward\"].indexOf(identifier.toLowerCase()) > -1) {\n                                    identifier = \"forward\";\n                                } else if ([\"r\", \"2\", \"r2\", \"reverse\"].indexOf(identifier.toLowerCase()) > -1) {\n                                    identifier = \"reverse\";\n                                } else {\n                                    this.state = \"error\";\n                                    this.errorMessage =\n                                        \"Unknown indicator of paired status encountered - only values of F, R, 1, 2, R1, R2, forward, or reverse are allowed.\";\n                                    return;\n                                }\n                            }\n                            const element = createDatasetDescription(dataIndex, identifier);\n                            elementsAtDepth.push(element);\n                            if (identifiersAtDepth.indexOf(identifier) >= 0) {\n                                this.state = \"error\";\n                                this.errorMessage =\n                                    \"Duplicate identifiers detected, collection identifiers must be unique.\";\n                                return;\n                            }\n                            identifiersAtDepth.push(identifier);\n                        } else {\n                            // Create nesting for this element.\n                            collectionTypeAtDepth = collectionTypeAtDepth\n                                .split(\":\")\n                                .slice(1)\n                                .join(\":\");\n                            let found = false;\n                            for (let element of elementsAtDepth) {\n                                if (element[\"name\"] == identifier) {\n                                    elementsAtDepth = element[subElementProp];\n                                    identifiersAtDepth = identifiersAtDepth[identifier];\n                                    found = true;\n                                    break;\n                                }\n                            }\n                            if (!found) {\n                                const subcollection = createSubcollectionDescription(identifier);\n                                elementsAtDepth.push(subcollection);\n                                identifiersAtDepth[identifier] = [];\n                                const childCollectionElements = [];\n                                subcollection[subElementProp] = childCollectionElements;\n                                subcollection.collection_type = collectionTypeAtDepth;\n                                elementsAtDepth = childCollectionElements;\n                                identifiersAtDepth = identifiersAtDepth[identifier];\n                            }\n                        }\n                    }\n                }\n\n                elementsByName[collectionName] = elements;\n            }\n\n            return elementsByName;\n        },\n        creationElementsFromDatasets() {\n            const { sources, data } = this.hotData;\n            const mappingAsDict = this.mappingAsDict;\n\n            const elementsByCollectionName = this.buildRequestElements(\n                (dataIndex, identifier) => {\n                    const source = sources[dataIndex];\n                    const res = this._datasetFor(dataIndex, data, mappingAsDict);\n                    const src = this.elementsType == \"datasets\" ? \"hda\" : \"ldda\";\n                    return { id: source[\"id\"], name: identifier, src: src, tags: res.tags };\n                },\n                identifier => {\n                    return { name: identifier, src: \"new_collection\" };\n                },\n                \"element_identifiers\"\n            );\n            return elementsByCollectionName;\n        },\n        creationElementsForFetch() {\n            // fetch elements for HDCA\n            const data = this.hotData.data;\n            const mappingAsDict = this.mappingAsDict;\n\n            const elementsByCollectionName = this.buildRequestElements(\n                (dataIndex, identifier) => {\n                    const res = this._datasetFor(dataIndex, data, mappingAsDict);\n                    res[\"name\"] = identifier;\n                    return res;\n                },\n                identifier => {\n                    return { name: identifier };\n                },\n                \"elements\"\n            );\n\n            return elementsByCollectionName;\n        },\n        creationDatasetsForFetch() {\n            // fetch elements for HDAs if not collection information specified.\n            const data = this.hotData.data;\n            const mappingAsDict = this.mappingAsDict;\n\n            const datasets = [];\n\n            for (let dataIndex in data) {\n                const res = this._datasetFor(dataIndex, data, mappingAsDict);\n                datasets.push(res);\n            }\n\n            return datasets;\n        },\n        populateElementsFromCollectionDescription(elements, collectionType, parentIdentifiers_) {\n            const parentIdentifiers = parentIdentifiers_ ? parentIdentifiers_ : [];\n            let data = [];\n            let sources = [];\n            for (let element of elements) {\n                const elementObject = element.object;\n                const identifiers = parentIdentifiers.concat([element.element_identifier]);\n                const collectionTypeLevelSepIndex = collectionType.indexOf(\":\");\n                if (collectionTypeLevelSepIndex === -1) {\n                    // Flat collection at this depth.\n                    // sources are the elements\n                    data.push([]);\n                    const source = { identifiers: identifiers, dataset: elementObject, tags: elementObject.tags };\n                    sources.push(source);\n                } else {\n                    const restCollectionType = collectionType.slice(collectionTypeLevelSepIndex + 1);\n                    let elementObj = this.populateElementsFromCollectionDescription(\n                        elementObject.elements,\n                        restCollectionType,\n                        identifiers\n                    );\n                    const elementData = elementObj.data;\n                    const elementSources = elementObj.sources;\n                    data = data.concat(elementData);\n                    sources = sources.concat(elementSources);\n                }\n            }\n            return { data, sources };\n        },\n        highlightColumn(n) {\n            const headerSelection = $(`.htCore > thead > tr > th:nth-child(${n + 1})`);\n            headerSelection.addClass(\"ht__highlight\");\n            const bodySelection = $(`.htCore > tbody > tr > td:nth-child(${n + 1})`);\n            bodySelection.addClass(\"rule-highlight\");\n        },\n        unhighlightColumn(n) {\n            const headerSelection = $(`.htCore > thead > tr > th:nth-child(${n + 1})`);\n            headerSelection.removeClass(\"ht__highlight\");\n            const bodySelection = $(`.htCore > tbody > tr > td:nth-child(${n + 1})`);\n            bodySelection.removeClass(\"rule-highlight\");\n        },\n        _datasetFor(dataIndex, data, mappingAsDict) {\n            const res = {};\n            if (mappingAsDict.url) {\n                const urlColumn = mappingAsDict.url.columns[0];\n                let url = data[dataIndex][urlColumn];\n                if (url.indexOf(\"://\") == -1) {\n                    // special case columns containing SRA links. EBI serves these a lot\n                    // faster over FTP.\n                    if (url.indexOf(\"ftp.sra.\") !== -1) {\n                        url = \"ftp://\" + url;\n                    } else {\n                        url = \"http://\" + url;\n                    }\n                }\n                res[\"url\"] = url;\n                res[\"src\"] = \"url\";\n            } else if (mappingAsDict.ftp_path) {\n                const ftpPathColumn = mappingAsDict.ftp_path.columns[0];\n                const ftpPath = data[dataIndex][ftpPathColumn];\n                res[\"ftp_path\"] = ftpPath;\n                res[\"src\"] = \"ftp_import\";\n            }\n            if (mappingAsDict.dbkey) {\n                const dbkeyColumn = mappingAsDict.dbkey.columns[0];\n                const dbkey = data[dataIndex][dbkeyColumn];\n                res[\"dbkey\"] = dbkey;\n            } else if (this.genome) {\n                res[\"dbkey\"] = this.genome;\n            }\n            if (mappingAsDict.file_type) {\n                const fileTypeColumn = mappingAsDict.file_type.columns[0];\n                const fileType = data[dataIndex][fileTypeColumn];\n                res[\"ext\"] = fileType;\n            } else if (this.extension) {\n                res[\"ext\"] = this.extension;\n            }\n            if (mappingAsDict.name) {\n                const nameColumn = mappingAsDict.name.columns[0];\n                const name = data[dataIndex][nameColumn];\n                res[\"name\"] = name;\n            }\n            if (mappingAsDict.info) {\n                const infoColumn = mappingAsDict.info.columns[0];\n                const info = data[dataIndex][infoColumn];\n                res[\"info\"] = info;\n            }\n            const tags = [];\n            if (mappingAsDict.tags) {\n                const tagColumns = mappingAsDict.tags.columns;\n                for (var tagColumn of tagColumns) {\n                    const tag = data[dataIndex][tagColumn];\n                    tags.push(tag);\n                }\n            }\n            if (mappingAsDict.group_tags) {\n                const groupTagColumns = mappingAsDict.group_tags.columns;\n                for (var groupTagColumn of groupTagColumns) {\n                    const tag = data[dataIndex][groupTagColumn];\n                    tags.push(\"group:\" + tag);\n                }\n            }\n            if (mappingAsDict.name_tag) {\n                const nameTagColumn = mappingAsDict.name_tag.columns[0];\n                const nameTag = data[dataIndex][nameTagColumn];\n                tags.push(\"name:\" + nameTag);\n            }\n            if (tags.length > 0) {\n                res[\"tags\"] = tags;\n            }\n            return res;\n        }\n    },\n    created() {\n        if (this.elementsType !== \"collection_contents\") {\n            let columnCount = null;\n            if (this.elementsType == \"datasets\") {\n                for (let element of this.initialElements) {\n                    if (element.history_content_type == \"dataset_collection\") {\n                        this.errorMessage =\n                            \"This component can only be used with datasets, you have specified one or more collections.\";\n                        this.state = \"error\";\n                    }\n                }\n            } else {\n                for (let row of this.initialElements) {\n                    if (columnCount == null) {\n                        columnCount = row.length;\n                    } else {\n                        if (columnCount != row.length) {\n                            this.jaggedData = true;\n                            break;\n                        }\n                    }\n                }\n            }\n            UploadUtils.getUploadDatatypes(\n                extensions => {\n                    this.extensions = extensions;\n                    this.extension = UploadUtils.DEFAULT_EXTENSION;\n                },\n                false,\n                UploadUtils.AUTO_EXTENSION\n            );\n            UploadUtils.getUploadGenomes(genomes => {\n                this.genomes = genomes;\n                this.genome = UploadUtils.DEFAULT_GENOME;\n            }, UploadUtils.DEFAULT_GENOME);\n        }\n    },\n    watch: {\n        addColumnRegexType: function(val) {\n            if (val == \"groups\") {\n                this.addColumnRegexGroupCount = 1;\n            }\n            if (val == \"replacement\") {\n                this.addColumnRegexReplacement = \"\\0\";\n            }\n        }\n    },\n    components: {\n        HotTable,\n        RuleComponent,\n        RuleTargetComponent,\n        RuleDisplay,\n        IdentifierDisplay,\n        ColumnSelector,\n        RegularExpressionInput,\n        StateDiv,\n        RuleModalHeader,\n        RuleModalMiddle,\n        RuleModalFooter,\n        Select2\n    }\n};\n</script>\n\n<style src=\"../../../node_modules/handsontable/dist/handsontable.full.css\"></style>\n<style>\n.table-column {\n    width: 100%;\n    /* overflow: scroll; */\n}\n.select2-container {\n    min-width: 60px;\n}\n.vertical #hot-table {\n    width: 100%;\n    overflow: scroll;\n    height: 400px;\n}\n.horizontal #hot-table {\n    width: 100%;\n    overflow: scroll;\n    height: 250px;\n}\n.rule-builder-body {\n    height: 400px;\n}\n.rule-column.vertical {\n    height: 400px;\n}\n.rule-column.horizontal {\n    height: 150px;\n}\n.rules-container-full {\n    width: 100%;\n    height: 400px;\n}\n.rules-container {\n    border: 1px dashed #ccc;\n    padding: 5px;\n}\n.rules-container-vertical {\n    width: 280px;\n    height: 400px;\n}\n.rules-container-horizontal {\n    width: 100%;\n    height: 150px;\n}\n.rules-container .title {\n    font-weight: bold;\n}\n.rule-summary {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n}\n.rule-edit-buttons {\n    margin: 5px;\n}\n.rules {\n    flex-grow: 1;\n    overflow-y: scroll;\n}\n.rule-source {\n    height: 400px;\n}\n.rules li {\n    list-style-type: circle;\n    list-style-position: inside;\n    padding: 5px;\n    padding-top: 0px;\n    padding-bottom: 0px;\n}\n.rule-column-selector li {\n    list-style-type: circle;\n    list-style-position: inside;\n    padding: 5px;\n    padding-top: 0px;\n    padding-bottom: 0px;\n}\n.rules .rule-error {\n    display: block;\n    margin-left: 10px;\n    font-style: italic;\n    color: red;\n}\n.rule-warning {\n    display: block;\n    margin-left: 10px;\n    font-style: italic;\n    color: #e28809;\n}\n.rule-summary .title {\n    font-size: 1.1em;\n}\n.rule-highlight {\n    font-style: italic;\n    font-weight: bold;\n}\n.rules-buttons {\n}\n.rule-footer-inputs label {\n    padding-left: 20px;\n    align-self: baseline;\n}\n.rule-footer-inputs .select2-container {\n    align-self: baseline;\n}\n.rule-footer-inputs {\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n    align-items: baseline;\n}\n.rule-footer-inputs input {\n    align-self: baseline;\n}\n.extension-select {\n    flex: 1;\n    max-width: 120px;\n    min-width: 60px;\n}\n.genome-select {\n    flex: 1;\n    max-width: 300px;\n    min-width: 120px;\n}\n.collection-name {\n    flex: 1;\n    min-width: 120px;\n    max-width: 500px;\n}\n.rule-footer-genome-group {\n    flex: 2;\n    display: flex;\n}\n.rule-footer-extension-group {\n    flex: 1;\n    display: flex;\n}\n.rule-footer-name-group {\n    flex: 3;\n    display: flex;\n    flex-direction: row-reverse;\n}\n.fa-edit,\n.fa-times,\n.fa-wrench {\n    cursor: pointer;\n}\n</style>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RuleCollectionBuilder.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RuleCollectionBuilder.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./RuleCollectionBuilder.vue?vue&type=template&id=5f97ba9e&\"\nimport script from \"./RuleCollectionBuilder.vue?vue&type=script&lang=js&\"\nexport * from \"./RuleCollectionBuilder.vue?vue&type=script&lang=js&\"\nimport style0 from \"../../../node_modules/handsontable/dist/handsontable.full.css?vue&type=style&index=0&lang=css&\"\nimport style1 from \"./RuleCollectionBuilder.vue?vue&type=style&index=1&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}